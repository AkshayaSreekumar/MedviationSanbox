[{"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/index.tsx":"1","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/reportWebVitals.ts":"2","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/App.tsx":"3","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/NavBar/Navbar.js":"4","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Pages/Payment.tsx":"5","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Pages/Admin.tsx":"6","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/numberFormat.js":"7","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Spinner/spinner.tsx":"8","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Plaid/Plaid.tsx":"9","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Alert/Alert.tsx":"10","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/Stripe.tsx":"11","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx":"12","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/StripeAccList/StripeAccList.tsx":"13","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/StripeCardList/StripeCardList.tsx":"14","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/AddCard/AddCard.tsx":"15","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/Card/index.tsx":"16","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CardForm/index.tsx":"17","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/EditCard/EditCard.tsx":"18","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CreditCard.ts":"19","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/baseKeys.js":"20","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/stripKey.js":"21","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/index.tsx":"22","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/reportWebVitals.ts":"23","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/App.tsx":"24","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Pages/Admin.tsx":"25","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/NavBar/Navbar.js":"26","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Pages/Payment.tsx":"27","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/lib/numberFormat.js":"28","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Spinner/spinner.tsx":"29","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Alert/Alert.tsx":"30","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Plaid/Plaid.tsx":"31","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/Stripe.tsx":"32","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/StripeAccList/StripeAccList.tsx":"33","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/StripeCardList/StripeCardList.tsx":"34","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx":"35","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/AddCard/AddCard.tsx":"36","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/Card/index.tsx":"37","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/CardForm/index.tsx":"38","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/index.tsx":"39","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/reportWebVitals.ts":"40","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/App.tsx":"41","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/NavBar/Navbar.js":"42","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Pages/Payment.tsx":"43","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Pages/Admin.tsx":"44","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/lib/numberFormat.js":"45","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/Stripe.tsx":"46","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Spinner/spinner.tsx":"47","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Alert/Alert.tsx":"48","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Plaid/Plaid.tsx":"49","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/StripeCardList/StripeCardList.tsx":"50","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/AddCard/AddCard.tsx":"51","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/StripeAccList/StripeAccList.tsx":"52","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx":"53","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/Card/index.tsx":"54","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/CardForm/index.tsx":"55"},{"size":601,"mtime":1653983295648,"results":"56","hashOfConfig":"57"},{"size":425,"mtime":1653983295648,"results":"58","hashOfConfig":"57"},{"size":792,"mtime":1653983295645,"results":"59","hashOfConfig":"57"},{"size":1431,"mtime":1653983295646,"results":"60","hashOfConfig":"57"},{"size":36557,"mtime":1657003906331,"results":"61","hashOfConfig":"57"},{"size":114,"mtime":1655274669693,"results":"62","hashOfConfig":"57"},{"size":135,"mtime":1654157148091,"results":"63","hashOfConfig":"57"},{"size":305,"mtime":1653983295647,"results":"64","hashOfConfig":"57"},{"size":7344,"mtime":1655274669693,"results":"65","hashOfConfig":"57"},{"size":1589,"mtime":1653983295645,"results":"66","hashOfConfig":"57"},{"size":7653,"mtime":1655274669694,"results":"67","hashOfConfig":"57"},{"size":1374,"mtime":1653983295647,"results":"68","hashOfConfig":"57"},{"size":4769,"mtime":1655274669694,"results":"69","hashOfConfig":"57"},{"size":4805,"mtime":1655274669694,"results":"70","hashOfConfig":"57"},{"size":2321,"mtime":1655274669692,"results":"71","hashOfConfig":"57"},{"size":6766,"mtime":1655274669692,"results":"72","hashOfConfig":"57"},{"size":10835,"mtime":1655274669692,"results":"73","hashOfConfig":"57"},{"size":9305,"mtime":1654157162824,"results":"74","hashOfConfig":"57"},{"size":2079,"mtime":1653984055952,"results":"75","hashOfConfig":"57"},{"size":1461,"mtime":1654531882237,"results":"76","hashOfConfig":"57"},{"size":213,"mtime":1653983295648,"results":"77","hashOfConfig":"57"},{"size":601,"mtime":1653983295648,"results":"78","hashOfConfig":"79"},{"size":425,"mtime":1653983295648,"results":"80","hashOfConfig":"79"},{"size":792,"mtime":1657008998742,"results":"81","hashOfConfig":"79"},{"size":114,"mtime":1655274669693,"results":"82","hashOfConfig":"79"},{"size":1431,"mtime":1653983295646,"results":"83","hashOfConfig":"79"},{"size":37525,"mtime":1657015088382,"results":"84","hashOfConfig":"79"},{"size":135,"mtime":1654157148091,"results":"85","hashOfConfig":"79"},{"size":305,"mtime":1653983295647,"results":"86","hashOfConfig":"79"},{"size":1589,"mtime":1653983295645,"results":"87","hashOfConfig":"79"},{"size":7344,"mtime":1655274669693,"results":"88","hashOfConfig":"79"},{"size":7666,"mtime":1657012409863,"results":"89","hashOfConfig":"79"},{"size":4769,"mtime":1657008935598,"results":"90","hashOfConfig":"79"},{"size":4809,"mtime":1657012451919,"results":"91","hashOfConfig":"79"},{"size":1374,"mtime":1653983295647,"results":"92","hashOfConfig":"79"},{"size":2321,"mtime":1655274669692,"results":"93","hashOfConfig":"79"},{"size":6766,"mtime":1655274669692,"results":"94","hashOfConfig":"79"},{"size":10835,"mtime":1655274669692,"results":"95","hashOfConfig":"79"},{"size":601,"mtime":1653983295648,"results":"96","hashOfConfig":"97"},{"size":425,"mtime":1653983295648,"results":"98","hashOfConfig":"97"},{"size":792,"mtime":1657008998742,"results":"99","hashOfConfig":"97"},{"size":1431,"mtime":1653983295646,"results":"100","hashOfConfig":"97"},{"size":43602,"mtime":1657104409894,"results":"101","hashOfConfig":"97"},{"size":114,"mtime":1655274669693,"results":"102","hashOfConfig":"97"},{"size":135,"mtime":1654157148091,"results":"103","hashOfConfig":"97"},{"size":7666,"mtime":1657028186326,"results":"104","hashOfConfig":"97"},{"size":305,"mtime":1653983295647,"results":"105","hashOfConfig":"97"},{"size":1589,"mtime":1653983295645,"results":"106","hashOfConfig":"97"},{"size":7344,"mtime":1655274669693,"results":"107","hashOfConfig":"97"},{"size":4809,"mtime":1657012451919,"results":"108","hashOfConfig":"97"},{"size":2321,"mtime":1655274669692,"results":"109","hashOfConfig":"97"},{"size":4769,"mtime":1657008935598,"results":"110","hashOfConfig":"97"},{"size":1374,"mtime":1653983295647,"results":"111","hashOfConfig":"97"},{"size":6766,"mtime":1655274669692,"results":"112","hashOfConfig":"97"},{"size":10860,"mtime":1657201447196,"results":"113","hashOfConfig":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vhfqje",{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cffnda",{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"213"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mv5xok",{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/index.tsx",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/reportWebVitals.ts",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/App.tsx",["288"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/NavBar/Navbar.js",["289"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Pages/Payment.tsx",["290","291","292","293","294","295","296","297","298","299","300","301","302","303"],[],"import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport Plaid from '../Plaid/Plaid';\nimport Stripe from '../Stripe/Stripe';\nimport { numberFormat } from '../../lib/numberFormat';\nimport { ButtonGroup, ToggleButton, Form, Placeholder } from 'react-bootstrap';\nimport Spinner from '../Spinner/spinner';\nimport Alert from '../Alert/Alert';\n\ninterface BillingData {\n    // billing_details: {\n    address: {\n        city: string,\n        country: string,\n        state: string,\n        line1: string,\n        line2: string,\n        postal_code: string\n    }\n    //}\n}\nconst Payment = () => {\n    const [isLoader, setIsLoader] = React.useState(true);\n    const [showAch, setShowAch] = React.useState(false);\n    const [showCard, setShowCard] = React.useState(false);\n    const [acceptCondition, setAcceptCondition] = React.useState(false);\n    const [paymentSelected, setPaymentSelected] = React.useState(false);\n    const [showOtherAmoutTextField, setShowOtherAmoutTextField] = React.useState(false);\n    const [apicustomerId, setApicustomerId] = useState<string | null>(null);\n    const [urlmail,setUrlmail] = useState<string | null>(null);\n    const [urlOrderId,setUrlOrderId] = useState<string | null>(null);\n    const [urlContactId,setUrlContactId] = useState<string | null>(null);\n    const [todaysDate,setTodaysDate] = useState<string | null>(null);\n    const [baseUrl,setBaseUrl] = useState<string | null>(null);\n    const [alert,setAlert] = useState({});\n    const [validLink, setvalidLink] = React.useState(false);\n    const [cardType, setCardType] = useState<string | null>(null);\n    const [totalAmount, setTotalAmount] = useState<string | null>(null);\n    const [patientName, setpatientName] = useState<string | null>(null);\n    const [origin, setOrigin] = useState<string | null>(null);\n    const [destination, setDestination] = useState<string | null>(null);\n    const [travelDate, setTravelDate] = useState<string | null>(null);\n    const [dueAmount, setDueAmount] = useState<string | null>(null);\n    const [payableAmount, setPayableAmount] = useState<string | null>(null);\n    const [orderNumber, setOrderNumber] = useState<string | null>(null);\n    const [orderTotal, setOrderTotal] = useState<string | null>(null);\n    const [paidAmount, setPaidAmount] = useState<string | null>(null);\n    const [transactionTotal, setTransactionTotal] = useState<string | null>(null);\n    const [orderOpportunity, setOrderOpportunity] = useState<string | null>(null);\n    const [orderQuote, setOrderQuote] = useState<string | null>(null);\n    const [billingAddress, setBillingAddress] = useState({});\n    const [paymentUrl, setPaymentUrl] = useState('');\n    const [transResponse, setTransResponse] =useState('');\n    const [redirectURL, setRedirectURL] = useState<string | null>(null);\n    //const [transIdUrl, settransIdUrl] = useState('');\n    const [idempotencyKey, setidempotencyKey] = useState('');\n    const [billingCity, setBillingCity] = useState<string | null>(null);\n    const [billingCountry, setBillingCountry] = useState<string | null>(null);\n    const [billingState, setBillingState] = useState<string | null>(null);\n    const [billingPostalcode, setBillingPostalcode] = useState<string | null>(null);\n    const [billingLine1, setBillingLine1] = useState<string | null>(null);\n    const [billingLine2, setBillingLine2] = useState<string | null>(null);\n    const [showBillingDetails, setShowBillingDetails] = React.useState(false);\n    const [chargeAmount, setChargeAmount] = useState<string | null>(null);\n    const [expiredLink, setexpiredLink] = React.useState(false);\n    const [charge, setCharge] = useState('');\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const urlPaymentLinkId = urlParams.get('Id')\n\n    const [radioValue, setRadioValue] = useState('card');\n\n    const radios = [\n        { name: 'Card', value: 'card' },\n        { name: 'ACH', value: 'ach' },\n    ];\n    const [selectedPaymentOption, setSelectedPaymentOption] = useState('default');\n    console.log(selectedPaymentOption);\n\n    useEffect(() => {\n        if(transResponse){\n            updatePaymentLinkRecord();\n        }\n        if (!idempotencyKey) {\n            createRandomKey();\n        }\n        getPaymentLinkDetails();\n        getFieldsetData();\n        if (apicustomerId && dueAmount && orderTotal) {\n            setIsLoader(false);\n        }\n        if (selectedPaymentOption) {\n            console.log(\"selectedPaymentOption\" + selectedPaymentOption)\n            if (selectedPaymentOption === 'default') {\n                if (dueAmount) {\n                    setShowOtherAmoutTextField(false);\n                    setPayableAmount(JSON.stringify(dueAmount));\n                }\n            }\n            else {\n                setShowOtherAmoutTextField(true);\n            }\n        }\n        if (cardType && payableAmount) {\n            let charge = '2';\n            let chargeAmd = (parseInt(charge) / 100) * parseInt(payableAmount)\n            setChargeAmount(JSON.stringify(chargeAmd))\n            setTotalAmount(JSON.stringify(parseInt(payableAmount) + chargeAmd));\n        }\n        if(radioValue === 'card' && apicustomerId){setShowCard(true);\n        }\n    }, [apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType,radioValue,urlContactId, baseUrl, idempotencyKey,transResponse])\n\n    const createRandomKey = () => {\n        var key = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < 10; i++) {\n            key += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        setidempotencyKey(key);\n        //this.idempotencyKey = key;\n        console.log(\"text--idempotencyKey->\" + idempotencyKey);\n        //localStorage.setItem('RandomKey', this.idempotencyKey);\n    }\n    const getPaymentLinkDetails = () => {\n        let baseUrl = \"https://crma-pay-developer-edition.na163.force.com/\";\n        setBaseUrl(baseUrl);\n        var payLinkParams = { paymentLinkId: urlPaymentLinkId };\n        var url = baseUrl + \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n            JSON.stringify(payLinkParams);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                var apiResponse = [];\n                apiResponse = JSON.parse(response);\n                var amountDue = apiResponse.crma_pay__AmountDue__c;\n                var linkActive = apiResponse.crma_pay__Active__c;\n                if(linkActive==false){\n                    console.log(\"inside if -->\"+linkActive);\n                    setexpiredLink(true);\n                    updatePaymentLinkRecord();\n                  }\n                var apiUrl = apiResponse.crma_pay__PaymentURL__c;\n                let url = new URL(apiUrl);\n                setUrlOrderId(url.searchParams.get(\"orderId\"));\n                let urlCustomerId = url.searchParams.get(\"customerId\");\n                setApicustomerId(urlCustomerId);\n                // if (urlCustomerId) {\n                //     setShowCard(true);\n                // }\n                setUrlContactId(url.searchParams.get(\"contactId\"));\n                let urlAmount = url.searchParams.get(\"amount\");\n                setUrlmail(url.searchParams.get(\"mail\"));\n                let createdDate = apiResponse.CreatedDate;\n                let date = new Date(Date.parse(createdDate));\n                var addedDate = date.setHours(date.getHours() + 8);\n                const current = new Date();\n                setTodaysDate(`${current.getFullYear()}-${current.getMonth() + 1\n                }-${current.getDate()}`);\n                var d1 = new Date(addedDate);\n                var d2 = new Date(current);\n                var timeleft = d1.getTime() - d2.getTime();\n                var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n                var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n                var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n                var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n                console.log(days + ' Day' + hours + ' Hr' + minutes + ' Min' + seconds + ' Sec');\n                let valid = false;\n                if (days >= 0) {\n                    if (hours > 0) {\n                        setvalidLink(true);\n                    }\n                }\n                else {\n                    setexpiredLink(true);\n                    updatePaymentLinkRecord();\n                }\n                var inputJson = apiResponse.crma_pay__JSON_Input__c;\n                var x = JSON.stringify(inputJson);\n                var xy = x.slice(1, x.length - 1);\n                var new1 = xy.replace(/!/g, '\"');\n                var y = JSON.parse(new1);\n                if (y[0].PatientName__c) {\n                    setpatientName(y[0].PatientName__c);\n                }\n                if (y[0].OriginDesired__c) {\n                    setOrigin(y[0].OriginDesired__c);\n                }\n                if (y[0].DestinationDesired__c) {\n                    setDestination(y[0].DestinationDesired__c);\n                }\n                if (y[0].TravelDate__c) {\n                    var dateValue = y[0].TravelDate__c;\n                    setTravelDate(dateValue.substring(0, 10));\n                }\n                // if (y[0].AmountDue__c) {\n                //     setDueAmount(y[0].AmountDue__c);\n                // }\n                getOrderDetails(urlOrderId, baseUrl);\n                //getStripeKey();\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n   \n    const getFieldsetData = () => {\n        console.log(\"Invoked getFieldsetData\");\n        var ipParams = { inputId: urlPaymentLinkId };\n        // var ipParams = {};\n        // ipParams.inputId = this.urlOrderId;\n        var url =\n        baseUrl +\n          \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n          JSON.stringify(ipParams);\n          console.log(\"FieldsetAPI=====>\"+url);\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            mode: \"cors\",\n            \"Access-Control-Allow-Origin\": \"*\",\n          },\n        })\n          .then((response) => response.text())\n          .then((response) => {\n            response = response.slice(1, response.length - 1);\n            console.log(\"getFieldsetData-->y------>\"+response);\n            var Reponse = JSON.parse(response);\n            console.log(\"Reponse\" + JSON.stringify(Reponse));\n            console.log(\"Reponse#########\"+Reponse[0].vlocity_cmt__EffectiveOrderTotal__c);\n            // this.dueAmount = Reponse[0].vlocity_cmt__EffectiveOrderTotal__c;\n            // this.setState({ dueAmount: this.dueAmount });\n            // console.log(\"#########\"+this.state.dueAmount);\n             var dueAmount = Reponse[0].crma_pay__Amount_Due__c;\n            setDueAmount(dueAmount);\n          })\n          .catch((err) => {\n            console.log(\"err\" + err);\n          })\n      }\n\n    const getOrderDetails = (orderId: string | null, baseUrl: string | null) => {\n        var orderParams = { orderId: orderId };\n        console.log(\"baseUrls--->\" + baseUrl);\n        var url =\n            baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n            JSON.stringify(orderParams);\n        console.log(\"this.order url ---->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                var contactReponse = JSON.parse(response);\n                var orderReponse = JSON.stringify(JSON.parse(response));\n                var orderNum = contactReponse.orderdetails[0].OrderNumber;\n                var total = contactReponse.orderdetails[0].TotalAmount;\n                setOrderNumber(orderNum);\n                setOrderTotal(total);\n                let initialOrderAmount = '' + total + '';\n                setTransactionTotal(initialOrderAmount);\n                if (contactReponse.orderdetails[0].OpportunityId) {\n                    setOrderOpportunity(contactReponse.orderdetails[0].OpportunityId);\n                    setOrderQuote(contactReponse.orderdetails[0].QuoteId);\n                }\n                if (orderTotal && dueAmount) {\n                    setPaidAmount(JSON.stringify(parseInt(orderTotal) - parseInt(dueAmount)));\n                }\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n\n    const selectedCardPayment = (id: string, billing_details: {\n        address: {\n            city: string,\n            country: string,\n            state: string,\n            line1: string,\n            line2: string,\n            postal_code: string,\n        }\n    }, card: {\n        brand: string\n    }) => {\n        console.log(\"id\" + id);\n        console.log(\"brand\" + card.brand);\n        if (id) {\n            setPaymentSelected(true);\n        }\n        if (card) {\n            setCardType(card.brand);\n        }\n        let payementUrl = \"https://api.stripe.com/v1/payment_intents?currency=usd&confirm=true&customer=\" + apicustomerId + \"&payment_method=\" + id\n        setPaymentUrl(payementUrl);\n        const billingDetails = billing_details;\n        const billingInfo: BillingData = billingDetails;\n        setBillingAddress({ city: billingInfo.address.city, country: billingInfo.address.country, line1: billingInfo.address.line1, line2: billingInfo.address.line2, postal_code: billingInfo.address.postal_code, state: billingInfo.address.state })\n        setBillingCity(billingInfo.address.city);\n        setBillingCountry(billingInfo.address.country);\n        setBillingLine1(billingInfo.address.line1);\n        setBillingLine2(billingInfo.address.line2);\n        setBillingPostalcode(billingInfo.address.postal_code);\n        setBillingState(billingInfo.address.state);\n        if (billingInfo.address.city || billingInfo.address.country || billingInfo.address.line1 || billingInfo.address.line2 || billingInfo.address.postal_code || billingInfo.address.state) {\n            setShowBillingDetails(true)\n        }\n        console.log(payementUrl);\n    }\n\n    const selectedBankPayment = (id: string) => {\n        if (id) {\n            console.log(\"Bank-Id\" + id);\n            setPaymentSelected(true);\n            let payementUrl = \"https://api.stripe.com/v1/charges?currency=usd&customer=\" + apicustomerId + \"&source=\" + id\n            setPaymentUrl(payementUrl);\n            console.log(payementUrl);\n        }\n    }\n\n    async function makepayment() {\n        setIsLoader(true);\n        fetch(paymentUrl + '&amount=' + totalAmount, {\n            method: \"POST\",\n            headers: {\n                \"x-rapidapi-host\": \"https://api.stripe.com\",\n                Authorization: \" Bearer sk_test_51K9PF1JZdmpiz6ZwomLVnx7eXnu0Buv19EwOe262mK5uj5E4bTpWO1trTF5S1OvVmdnpWtd2fm8s0HHbMlrqY2uZ00lWc3uV7c\",\n                \"Idempotency-Key\": idempotencyKey,\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(JSON.stringify('PaymentReaponse' + response));\n                let transactionId = response.id;\n                let transactionstatus = response.status;\n                let gatewayMessage = JSON.parse(\n                    JSON.stringify(response.charges.data[0].outcome.seller_message)\n                );\n                let gatewayStatus = JSON.parse(\n                    JSON.stringify(response.charges.data[0].outcome.network_status)\n                );\n                let currencyCode = response.currency;\n                var localKey = localStorage.getItem('RandomKey');\n                setIsLoader(false);\n                if (localKey !== idempotencyKey) {\n                    createTransactionRecord(transactionId, transactionstatus, gatewayMessage, gatewayStatus, currencyCode);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function createTransactionRecord(\n        transactionId: string,\n        transactionstatus: string,\n        gatewayMessage: string,\n        gatewayStatus: string,\n        currencyCode: string\n    ) {\n        setIsLoader(true);\n        // if (this.urlContactId) {\n        //   this.contactId = this.urlContactId;\n        // } else {\n        //   this.contactId = this.newContactId;\n        // }\n        // if (this.urlmail) {\n        //   this.mail = this.urlmail;\n        // } else {\n        //   this.mail = this.email;\n        // }\n        //var amount = '\"'+ this.payingAmount+  '\"';\n        //console.log(\"New amount------>\"+amount);\n        //const amount = this.payingAmount;\n        var transactionParams = {\n            paymentGatewayIdentifier: transactionId,\n            Amount: payableAmount,\n            transactionEmail: urlmail,\n            transactionCurrencyCode: currencyCode,\n            transactionOrder: urlOrderId,\n            transactionContact: urlContactId,\n            processedDateTime: todaysDate,\n            transactionStatus: transactionstatus,\n            gatewayMessage: gatewayMessage,\n            gatewayNetworkStatus: gatewayStatus,\n            transactionQuote: orderQuote,\n            transctionOpportunity: orderOpportunity,\n            billingStreet: billingLine1,\n            billingCity: billingCity,\n            billingCountry: billingCountry,\n            billingState: billingState,\n            billingZip: billingPostalcode\n        };\n\n        var url = baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n            JSON.stringify(transactionParams);\n        console.log(\"this.final transaction url --->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (response) {\n                    console.log('LstResponse------------------------->' + response);\n                    var xy = response;\n                    console.log(\"xxxx->\"+xy);\n                    setTransResponse(xy);\n                    console.log('transid------------------------->' +transResponse);\n                    \n                    localStorage.setItem('RandomKey', idempotencyKey);\n                    setIsLoader(false);\n                    //setAlert({ status: 'success', message: 'Payment completed successfully' });\n                    if(redirectURL){\n                        window.location.href = redirectURL;\n                    }\n                    //getPaymentLinkDetails();\n                    //this.transIdUrl = response;\n                    //var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page' + '?transId=' + this.transIdUrl;\n                    //console.log(\"invoked redirecturl\" + redirectUrl);\n                    if(transResponse){\n                    console.log('transid--------if----------------->' + transResponse);\n                    //updatePaymentLinkRecord();\n                    }\n                }\n                console.log(\" create  transaction-->\" + JSON.stringify(response));\n                //this.navigateTo(redirectUrl);\n            })\n            .catch((err) => {\n                setIsLoader(false);\n                setAlert({ status: 'fail', message: 'Something went wrong' });\n                console.log(\"err\" + err);\n            });\n    }\n\n    const updatePaymentLinkRecord = () => {\n        console.log(\"Invoked Update PayLink\");\n        //var transId = settransIdUrl;\n        if (transResponse) {\n            var payLinkRcdParamsWithId = {\n                paymentLinkId: urlPaymentLinkId,\n                PaymentTransaction: transResponse,\n                Active: false\n            };\n            var url =\n                baseUrl +\n                \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n                JSON.stringify(payLinkRcdParamsWithId);\n        } else {\n            var payLinkRcdParams = {\n                paymentLinkId: urlPaymentLinkId,\n                Active: false\n            };\n            var url =\n                baseUrl +\n                \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n                JSON.stringify(payLinkRcdParams);\n        }\n        // var url =\n        //   baseUrl +\n        //   \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n        //   JSON.stringify(payLinkRcdParams);\n        console.log(\"this.final transaction url --->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(\" update  payLink-->\" + JSON.stringify(response));\n                // var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page'+'?transId=' + this.transId;\n                //   //var redirectUrl = response.charges.data[0].receipt_url;\n                //   this.navigateTo(redirectUrl);\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            });\n    }\n\n    const setPayType = (payType: string) => {\n        setSelectedPaymentOption(payType);\n    }\n    return (\n        <>\n            {isLoader ? <Spinner /> : null}\n            <Alert alert={alert} setAlert={setAlert}/>\n            {expiredLink ? <div className='container'><div className=\"alert alert-danger opacity-75 mt-5\" role=\"alert\">\n                <h4 className=\"alert-heading\">Oops!</h4>\n                <p>This link is expired.</p>\n                <hr />\n                <p className=\"mb-0\">This URL is not valid anymore.</p>\n            </div> </div>:\n            <div className=\"payment-container container\">\n                <div className=\"row m-0\">\n                    <div className=\"col-md-7 col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mb-4\">\n                                <div className=\"row box-right card-bg-img\">\n                                    <div className=\"col-md-8 ps-0 \">\n                                        <p className=\"ps-3 textmuted fw-bold h6 mb-0\">TOTAL AMOUNT</p>\n                                        <p className=\"h1 fw-bold d-flex\"> <span\n                                            className=\" fas fa-dollar-sign textmuted pe-1 h6 align-text-top mt-1\"></span>{numberFormat(orderTotal)}\n                                            {/* <span className=\"textmuted\">.58</span> */}\n                                        </p>\n                                        {/* <p className=\"ms-3 px-2 bg-green\">+10% since last month</p> */}\n                                    </div>\n                                    <div className=\"col-md-4\">\n                                        <p className=\"p-org\"> <span className=\"fas fa-circle pe-2\"></span>Due amount </p>\n                                        <p className=\"fw-bold mb-3\">{numberFormat(dueAmount)}\n                                        </p>\n                                        {/* <p className=\"p-blue\"><span className=\"fas fa-circle pe-2\"></span>Amount Paid</p>\n                                        <p className=\"fw-bold\">{numberFormat(paidAmount)}\n                                        </p> */}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-12 px-0 mb-4\">\n                                <div className=\"box-right card-bg-img\">\n                                    <div className=\"d-flex pb-2\">\n                                        <p className=\"fw-bold h7\">\n                                            Order Summary  <span className=\"textmuted\"> / ({orderNumber})</span></p>\n                                        <p className=\"ms-auto p-blue text-end\">\n                                        </p>\n                                    </div>\n                                    <div className=\"row pb-2\">\n                                        <div className=\"col-6\">\n                                            <p className=\"textmuted h8\">Patient Name</p>\n                                            <p className='h7'>{patientName ? patientName : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                <Placeholder xs={7} />\n                                            </Placeholder>}\n                                            </p>\n                                        </div>\n                                        <div className=\"col-6 text-end\">\n                                            <p className=\"textmuted h8\">Travel Date</p>\n                                            <p className='h7'>{travelDate ? travelDate : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                <Placeholder xs={7} />\n                                            </Placeholder>}</p>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-6\">\n                                            <p className=\"textmuted h8\">Orgin</p>\n                                            <p className='h7'>{origin ? origin : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                <Placeholder xs={7} />\n                                            </Placeholder>}</p>\n                                        </div>\n                                        <div className=\"col-6 text-end\">\n                                            <p className=\"textmuted h8\">Destination</p>\n                                            <p className='h7'>{destination ? destination : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                <Placeholder xs={7} />\n                                            </Placeholder>} </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {showBillingDetails ?\n                                <div className=\"col-12 px-0\">\n                                    <div className=\"box-right card-bg-img\">\n                                        <div className=\"d-flex mb-2\">\n                                            <p className=\"fw-bold\">Billing address</p>\n                                        </div>\n                                        <div className=\"mb-2\">\n                                            <p className=\"h7 mb-1\">{billingCity} </p>\n                                            <p className=\"h7 mb-1\">{billingLine1}, {billingLine2}</p>\n                                            <p className=\"h7 \"><span>{billingState}</span> ,<span> {billingCountry} </span> <span> {billingPostalcode}</span></p>\n                                        </div>\n                                    </div>\n                                </div> : ''}\n                        </div>\n                    </div>\n                    <div className=\"col-md-5 col-12 ps-md-5 p-0 \">\n                        <div className=\"box-left card-bg-img\">\n\n                            <div className=\"\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <p className=\"fw-bold h7 mb-1 pt-2\">Choose Payment Method</p>\n                                    </div>\n                                    <div className=\"col-md-6 float-right text-end\">\n                                        <ButtonGroup>\n                                            {radios.map((radio, idx) => (\n                                                <ToggleButton\n                                                    key={idx}\n                                                    id={`radio-${idx}`}\n                                                    type=\"radio\"\n                                                    variant={idx % 2 ? 'outline-primary' : 'outline-primary'}\n                                                    name=\"radio\"\n                                                    size=\"sm\"\n                                                    value={radio.value}\n                                                    checked={radioValue === radio.value}\n                                                    onChange={(e) => {\n                                                        setShowBillingDetails(false);\n                                                        setPaymentSelected(false);\n                                                        setRadioValue(e.currentTarget.value); if (e.currentTarget.value === 'card') {\n                                                            setShowCard(true);\n                                                            setShowAch(false);\n                                                        } else { setShowAch(true); setShowCard(false); }\n                                                    }}\n                                                >\n                                                    {radio.name}\n                                                </ToggleButton>\n                                            ))}\n                                        </ButtonGroup>\n                                    </div>\n                                </div>\n                                <p className=\"textmuted h8 mb-0\">Please choose any payment method to continue</p>\n                                <div className=\"\">\n                                    {showAch ? <Plaid apicustomerid={apicustomerId} selectedBankPayment={selectedBankPayment} /> : null}\n                                </div>\n                                <div className=\"\">\n                                    {showCard ? <Stripe apicustomerid={apicustomerId} selectedCardPayment={selectedCardPayment} /> : null}\n                                </div>\n                                {showCard || showAch ? null : <div className=\"card card-body bg-light- d-flex flex-row justify-content-between align-items-center mb-3\"><Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                    <Placeholder xs={7} /> <Placeholder xs={4} /> <Placeholder xs={4} />{' '}\n                                    <Placeholder xs={6} /> <Placeholder xs={8} />\n                                </Placeholder></div>}\n                            </div>\n                            <div className='mb-2'>\n                                <form className=\"list-group\">\n                                    <label className=\"list-group-item\">\n                                        <div className=\"row\">\n                                            <div className='col-1 py-2'>\n                                                <input type=\"radio\" className=\"me-3\" id=\"default\" name=\"Default-Payment\" value=\"default\" checked={selectedPaymentOption === 'default'} onChange={(e) => {\n                                                    setPayType(e.target.value)\n                                                }} disabled={!paymentSelected} /></div>\n                                            <div className='col-5 py-2'>\n                                                Total amount due\n                                            </div>\n                                            <div className='col-6 py-2 text-end'>\n                                                {numberFormat(dueAmount)}\n                                            </div>\n                                        </div>\n                                    </label>\n                                    <label className=\"list-group-item\">\n                                        <div className=\"row\">\n                                            <div className='col-1 py-2'>\n                                                <input type=\"radio\" className=\"me-3\" id=\"other-payment\" name=\"other-payment\" value=\"other-payment\" checked={selectedPaymentOption === 'other-payment'} onChange={(e) => {\n                                                    setPayType(e.target.value); setPayableAmount(''); setTotalAmount(''); setChargeAmount('');\n                                                }} disabled={!paymentSelected} /></div>\n                                            <div className='col-5 py-2'>\n                                                Other amount\n                                            </div>\n                                            <div className='col-6 text-end'>\n                                                {showOtherAmoutTextField ?\n                                                    <div className=\"input-group\">\n                                                        <span className=\"input-group-text\">$</span>\n                                                        <input type=\"text\" className=\"form-control border-end-0 text-end pe-0\" aria-label=\"Amount (to the nearest dollar)\" onKeyUp={(e) => {\n                                                            setPayableAmount(e.currentTarget.value);\n                                                        }} />\n                                                        <span className=\"input-group-text bg-transparent ps-0\">.00</span>\n                                                    </div> : null}\n                                            </div>\n                                        </div>\n                                    </label>\n                                </form>\n                            </div>\n                            <div>\n                                <div className=\"h8\">\n                                    <div className=\"row m-0 border-bottom mb-3\">\n                                        <div className=\"col-8 h8 pe-0 ps-2\">\n                                            <span className=\"d-block py-2\">Payment Charge</span>\n                                        </div>\n                                        <div className=\"col-4 p-0 pe-2 text-end\">\n                                            <span className=\"d-block py-2\">{numberFormat(chargeAmount)}</span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"d-flex h7 mb-2 px-2\">\n                                        <p className=\"\">Total Amount</p>\n                                        <p className=\"ms-auto\"> <span className='fw-bold'>{numberFormat(totalAmount)}</span></p>\n                                    </div>\n                                    <div className=\"h8 mb-4\">\n                                        <Form.Check aria-label=\"option 1\" label='I accept Lorem ipsum dolor sit amet elit. Adipisci ea harum sed quaerat tenetur' onChange={(e) => { setAcceptCondition(e.target.checked) }} disabled={!paymentSelected} />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <button className=\"btn btn-primary d-block h8 w-100\" onClick={makepayment} disabled={!acceptCondition}>PAY NOW\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div >}\n\n        </>\n    )\n}\nexport default Payment;\n","/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Pages/Admin.tsx",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/numberFormat.js",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Spinner/spinner.tsx",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Plaid/Plaid.tsx",["304","305","306","307","308","309","310","311","312","313","314","315","316"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Alert/Alert.tsx",["317"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/Stripe.tsx",["318","319","320","321","322","323","324","325","326","327"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx",["328","329","330"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/StripeAccList/StripeAccList.tsx",["331","332","333","334","335"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/Stripe/StripeCardList/StripeCardList.tsx",["336","337","338","339","340"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/AddCard/AddCard.tsx",["341","342","343","344"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/Card/index.tsx",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CardForm/index.tsx",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/EditCard/EditCard.tsx",["345","346","347","348","349","350","351","352","353","354","355"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CreditCard.ts",[],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/baseKeys.js",["356","357","358","359"],[],"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/lib/stripKey.js",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/index.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/reportWebVitals.ts",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/App.tsx",["360"],[],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Navbar from './components/NavBar/Navbar';\nimport Admin from './components/Pages/Admin';\nimport Payment from './components/Pages/Payment';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"payment-background\">\n        <div className=\"left\"></div>\n        <div className=\"right\">\n          <div className=\"strip-bottom\"></div>\n          <div className=\"strip-top\"></div>\n        </div>\n      </div>\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<Payment />} />\n          <Route path=\"/Admin\" element={<Admin />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Pages/Admin.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/NavBar/Navbar.js",["361"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Pages/Payment.tsx",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/lib/numberFormat.js",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Spinner/spinner.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Alert/Alert.tsx",["379"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Plaid/Plaid.tsx",["380","381","382","383","384","385","386","387","388","389","390","391","392"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/Stripe.tsx",["393","394","395","396","397","398","399","400","401","402"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./Stripe.css\";\nimport StripeCardList from \"./StripeCardList/StripeCardList\";\nimport { Modal, Button, Placeholder } from 'react-bootstrap';\n// import Ccard from '../Card/Ccard';\nimport AddCard from '../CardManager/AddCard/AddCard'\nimport Spinner from '../Spinner/spinner';\nimport Alert from '../Alert/Alert';\n\ninterface cardDataformat {\n  id: string;\n  bank_name: string;\n  card: {\n    last4: string;\n    exp_year: string;\n    exp_month: string;\n    brand: string;\n  },\n  billing_details: {\n    address: {\n      city: string,\n      country: string,\n      state: string,\n      line1: string,\n      line2: string,\n      postal_code: string,\n    }\n  };\n  selectedCardPayment: (id: string, billing_details: {\n    address: {\n      city: string,\n      country: string,\n      state: string,\n      line1: string,\n      line2: string,\n      postal_code: string,\n    }\n  }, card: {\n    brand: string\n  }) => void;\n}\n\nconst Stripe = (props: any) => {\n  const [alert,setAlert] = useState({});\n  const [isLoader, setIsLoader] = React.useState(false);\n  const [paymentExist, setPaymentExist] = React.useState(false);\n  const [cardList, setCardList] = useState<cardDataformat[]>([]);\n  const [isshowAddress, setIsShowAddress] = useState(false);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    console.log(\"props.apicustomerid\" + props.apicustomerid);\n    loadCardData(props.apicustomerid);\n  }, []);\n\n  const loadCardData = (cusId: string) => {\n    console.log(\"invoked Card()!!!!\");\n    fetch(\n      \"https://api.stripe.com/v1/payment_methods?type=card&customer=\" + cusId,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"https://api.stripe.com\",\n          Authorization:\n            \" Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"Card list--------------\" + JSON.stringify(response));\n        setCardList(response.data);\n        if (response.data) {\n          setPaymentExist(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const selectedCard = (id: string, billing_details: {},card:{}) => {\n    console.log(id, billing_details,card);\n    props.selectedCardPayment(id, billing_details,card)\n  };\n\n  const handleClose = () => { setShow(false) };\n  const handleShow = () => setShow(true);\n  const handleAddCard = () => {\n    setShow(true)\n  }\n  const createPaymentMethod = (cardNumber:string,cvv:string,validMonth:string,validYear:string,billingLine1:string,billingLine2:string,billingCity:string,billingCountry:string,billingState:string,billingPostalcode:string) => {\n    setIsLoader(true);\n    var createMethodUrl =\n      \"https://api.stripe.com/v1/payment_methods\"\n      +\n      \"?type=card&card[number]=\" +\n      cardNumber +\n      \"&card[exp_month]=\" +\n      validMonth +\n      \"&card[exp_year]=\" +\n      validYear +\n      \"&card[cvc]=\" +\n      cvv +\n      \"&billing_details[address[city]]=\" + billingCity + \"&billing_details[address[line1]]=\" + billingLine1 + \"&billing_details[address[country]]=\" + billingCountry + \"&billing_details[address[postal_code]]=\" + billingPostalcode + \"&billing_details[address[state]]=\" + billingState;\n    console.log(\"createcard url-->\" + createMethodUrl);\n\n    fetch(createMethodUrl, {\n      method: \"POST\",\n      headers: {\n        \"x-rapidapi-host\": \"https://api.stripe.com\",\n        Authorization: \"Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.id) {\n          console.log(response);\n          attachPaymentmethod(response.id, props.apicustomerid)\n        } else {\n          var message = response.error.message;\n        }\n      }).catch((err) => {\n        console.log(err);\n        var message = \" Error Occurred\";\n        var type = \"error\";\n      });\n  }\n\n  const attachPaymentmethod = (paymentMethodId: string, customerId: string) => {\n    console.log(\"this.customerId in attachPaymentmethod---->\" + paymentMethodId, customerId);\n    var attachUrl =\n      \"https://api.stripe.com/v1/payment_methods/\" +\n      paymentMethodId +\n      \"/attach?customer=\" +\n      customerId;\n    fetch(attachUrl, {\n      method: \"POST\",\n      headers: {\n        \"x-rapidapi-host\": \"https://api.stripe.com\",\n        Authorization: \"Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\"attach payment medthod----->\", response);\n        setAlert({status:'success',message:'New payment method is added sucessfully'})\n        loadCardData(props.apicustomerid);\n        setIsLoader(false);\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err);\n        var message = \" Error Occurred\";\n        var type = \"error\";\n      });\n  }\n  const getCardvalues = (cardinputs: {\n    id: string;\n    cardNumber: string;\n    cardHolder: string;\n    cardMonth: string;\n    cardYear: string;\n    cardCvv: string;\n    addrressline1: string;\n    addrressline2: string;\n    country: string;\n    city: string;\n    state: string;\n    postalCode: string\n  }) => {\n    console.log(JSON.stringify(cardinputs.cardHolder));\n    console.log(cardinputs.cardNumber, cardinputs.cardCvv, cardinputs.cardMonth, cardinputs.cardYear, cardinputs.addrressline1, cardinputs.addrressline2, cardinputs.city, cardinputs.country, cardinputs.state && cardinputs.postalCode)\n    if (cardinputs.cardNumber && cardinputs.cardCvv && cardinputs.cardMonth && cardinputs.cardYear && cardinputs.addrressline1 && cardinputs.addrressline2 && cardinputs.city && cardinputs.country && cardinputs.state && cardinputs.postalCode) {\n      createPaymentMethod(cardinputs.cardNumber,cardinputs.cardCvv,cardinputs.cardMonth,cardinputs.cardYear,cardinputs.addrressline1,cardinputs.addrressline2,cardinputs.city,cardinputs.country,cardinputs.state,cardinputs.postalCode);\n    }\n  };\n  function refreshComponent() {\n    setIsLoader(true);\n    loadCardData(props.apicustomerid);\n    setIsLoader(false);\n  }\n  return (\n    <>\n      {isLoader ? <Spinner /> : null}\n      <Alert alert={alert} setAlert={setAlert}/>\n      {paymentExist ? <StripeCardList cardList={cardList} selectedCard={selectedCard} refreshComponent={refreshComponent} /> : <div className=\"card card-body bg-light- d-flex flex-row justify-content-between align-items-center\"><Placeholder className=\"w-100 h9\" animation=\"glow\">\n        <Placeholder xs={7} /> <Placeholder xs={4} /> <Placeholder xs={4} />{' '}\n        <Placeholder xs={6} /> <Placeholder xs={8} />\n      </Placeholder></div>}\n      <div className=\"text-end\">\n        <button className=\"btn btn-outline-success btn-sm lnch-btn my-2 rounded-pill rounded-pill\" onClick={() => handleShow()}>\n          Add new card\n        </button>\n      </div>\n\n      <div className='d-block'>\n        <Modal show={show} onHide={handleClose}\n          {...props}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered>\n          <Modal.Header className='border-0 pb-0'>\n            <Modal.Title className='fw-bold h6'>Add new card</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <AddCard getCardvalues={getCardvalues} handleClose={handleClose} />\n\n          </Modal.Body>\n        </Modal>\n      </div>\n    </>\n  );\n};\nexport default Stripe;\n",[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/StripeAccList/StripeAccList.tsx",["403","404","405","406","407"],[],"import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Placeholder, Dropdown } from 'react-bootstrap';\nimport Alert from '../../Alert/Alert';\n\ninterface AccInterface {\n\n    accountlist: {\n        id: string, bank_name: string, last4: string, status: string\n    }[];\n\n    selectedAccount: (id: string) => void;\n    refreshComponent: () => void;\n\n}\n\nconst StripeAccList: React.FC<AccInterface> = (props) => {\n    const [alert, setAlert] = useState({});\n    const [show, setShow] = useState(false);\n    const [action, setAction] = useState(false);\n    const [deleteCardId, setDeleteCardId] = useState<string | null>(null);\n    const cradListContainer = useRef(null);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    console.log(\"StripeAccountList\" + JSON.stringify(props.accountlist));\n    function refreshCardList() {\n        props.refreshComponent();\n    }\n    const deletePaymentMethod = (id: string) => {\n        console.log(\"myContainer..\", cradListContainer.current);\n        setDeleteCardId(id);\n        handleShow();\n    }\n    function ConfirmDelete() {\n        var deleteUrl = \"https://api.stripe.com/v1/payment_methods/\" + deleteCardId + \"/detach\";\n        fetch(deleteUrl,\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-rapidapi-host\": \"https://api.stripe.com\",\n                    Authorization: \" Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(\" delete response -->\" + JSON.stringify(response));\n                handleClose()\n                refreshCardList();\n                setAlert({ status: 'success', message: 'Payment Method removed Sucessfully' });\n            })\n            .catch((err) => {\n                console.log(err);\n                setAlert({ status: 'fail', message: err.message });\n            });\n\n    }\n    return (<div className='acc-list'>\n        <Alert alert={alert} setAlert={setAlert} />\n        {\n\n            props.accountlist.map(acc => {\n                return <label key={acc.id}>\n                    <input type=\"radio\" name=\"demo\" className=\"card-input-element d-none\" id={acc.id} onChange={props.selectedAccount.bind(null, acc.id)} />\n                    <div className=\"card card-body bg-light- d-flex flex-row justify-content-between align-items-center\">\n                        <div className='row w-100'>\n                            <div className='col-2'>\n                                <i className=\"fa fa-university text-black-50 fs-1 \" aria-hidden=\"true\"></i>\n                            </div>\n                            <div className='col-10'>\n                                <p className='h7 mb-1'>{acc.bank_name}  <span className=\"ms-3 px-2 bg-green ccNumber position-relative\">{acc.status}</span></p>\n                                <p className='fw-bold h8 mb-0'>XXXXXXXX{acc.last4}</p>\n                                <div className='carActionBtn'>\n                                    <Dropdown>\n                                        <Dropdown.Toggle variant=\"light\" className='text-muted bg-white dropdown-toggle-custom-' size='lg' id=\"dropdown-basic\">\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item >Edit</Dropdown.Item>\n                                            <Dropdown.Item onClick={deletePaymentMethod.bind(null, acc.id)}>Delete</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </label>\n\n            })\n\n        }\n        <Modal show={show} onHide={handleClose} centered>\n            <Modal.Header >\n                <Modal.Title className='fw-bold h6'><i className=\"fa fa-exclamation-triangle text-warning me-3\" aria-hidden=\"true\"></i>Remove</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>The payment method will no longer be usable for you !.</Modal.Body>\n            <Modal.Footer className='pt-0 border-top-0'>\n                <Button variant=\"secondary\" size=\"sm\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"danger\" size=\"sm\" onClick={ConfirmDelete}>\n                    Remove\n                </Button>\n            </Modal.Footer>\n        </Modal>\n\n    </div>);\n\n}\n\nexport default StripeAccList;",[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Stripe/StripeCardList/StripeCardList.tsx",["408","409","410","411","412"],[],"import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Placeholder, Dropdown } from 'react-bootstrap';\nimport Alert from '../../Alert/Alert';\n\ninterface AccInterface {\n\n  cardList: {\n    id: string, bank_name: string, billing_details: {\n      address: {\n        city: string,\n        country: string,\n        state: string,\n        line1: string,\n        line2: string,\n        postal_code: string,\n      }\n    }, card: {\n      last4: string;\n      exp_year: string;\n      exp_month: string;\n      brand: string;\n\n    }\n  }[];\n\n  selectedCard: (id: string, billing_details: {\n    address: {\n      city: string,\n      country: string,\n      state: string,\n      line1: string,\n      line2: string,\n      postal_code: string,\n    }\n  }, card: {\n    brand: string\n  }) => void;\n  refreshComponent: () => void;\n}\nconst StripeCardList: React.FC<AccInterface> = (props) => {\n  const [alert, setAlert] = useState({});\n  const [show, setShow] = useState(false);\n  const [action, setAction] = useState(false);\n  const [deleteCardId, setDeleteCardId] = useState<string | null>(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const cradListContainer = useRef(null);\n\n  function refreshCardList() {\n    props.refreshComponent();\n  }\n\n  const deletePaymentMethod = (id: string) => {\n    console.log(\"myContainer..\", cradListContainer.current);\n    setDeleteCardId(id);\n    handleShow();\n  }\n  function ConfirmDelete() {\n    var deleteUrl = \"https://api.stripe.com/v1/payment_methods/\" + deleteCardId + \"/detach\";\n    fetch(deleteUrl,\n      {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"https://api.stripe.com\",\n          Authorization: \" Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(\" delete response -->\" + JSON.stringify(response));\n        handleClose()\n        refreshCardList();\n        setAlert({status:'success',message:'Payment Method is removed Sucessfully'});\n      })\n      .catch((err) => {\n        console.log(err);\n        setAlert({status:'fail',message:err.message});\n      });\n\n  }\n  function showCardActions() {\n    setAction(true);\n  }\n  console.log(\"StripeAccountList\" + JSON.stringify(props.cardList))\n  return (<div className='acc-list'>\n    <Alert alert={alert} setAlert={setAlert} />\n    {\n\n      props.cardList.map(acc => {\n        return <label key={acc.id}>\n          <input type=\"radio\" name=\"demo\" className=\"card-input-element d-none\" id={acc.id} onChange={props.selectedCard.bind(null, acc.id, acc.billing_details, acc.card)} />\n          <div className=\"card card-body bg-light- d-flex flex-row justify-content-between align-items-center\" ref={cradListContainer}>\n            <div className='row w-100'>\n              <div className='col-2 py-1'>\n                <img\n                  src={`/card-type/${acc.card.brand}.svg`}\n                  alt=\"\" className='CardListIcon'\n                />\n              </div>\n              <div className='col-10'>\n                <p className='fw-bold h7 mb-0'><span className='ccNumber position-relative'>XXXXXXXX{acc.card.last4}</span></p>\n                <p className='h8 mb-1'><span className='textmuted h8'> Valid Upto</span><span className='ms-md-2'>{acc.card.exp_month}</span> / <span>{acc.card.exp_year}</span></p>\n                <div className='carActionBtn'>\n                  <Dropdown>\n                    <Dropdown.Toggle variant=\"light\" className='text-muted bg-white dropdown-toggle-custom-' size='lg' id=\"dropdown-basic\">\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                      <Dropdown.Item >Edit</Dropdown.Item>\n                      <Dropdown.Item onClick={deletePaymentMethod.bind(null, acc.id)}>Delete</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </label>\n\n      })\n\n    }\n    <Modal show={show} onHide={handleClose} centered>\n      <Modal.Header >\n        <Modal.Title className='fw-bold h6'><i className=\"fa fa-exclamation-triangle text-warning me-3\" aria-hidden=\"true\"></i>Remove</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>This payment method will no longer be usable for you !.</Modal.Body>\n      <Modal.Footer className='pt-0 border-top-0'>\n        <Button variant=\"secondary\" size=\"sm\" onClick={handleClose}>\n          Close\n        </Button>\n        <Button variant=\"danger\" size=\"sm\" onClick={ConfirmDelete}>\n          Remove\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  </div>\n\n  );\n\n}\n\nexport default StripeCardList;","/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx",["413","414","415"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/AddCard/AddCard.tsx",["416","417","418","419"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/Card/index.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedDev/interactpay/client/src/components/CardManager/CardForm/index.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/index.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/reportWebVitals.ts",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/App.tsx",["420"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/NavBar/Navbar.js",["421"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Pages/Payment.tsx",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],[],"import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport Plaid from '../Plaid/Plaid';\nimport Stripe from '../Stripe/Stripe';\nimport { numberFormat } from '../../lib/numberFormat';\nimport { ButtonGroup, ToggleButton, Form, Placeholder } from 'react-bootstrap';\nimport Spinner from '../Spinner/spinner';\nimport Alert from '../Alert/Alert';\n\ninterface BillingData {\n    // billing_details: {\n    address: {\n        city: string,\n        country: string,\n        state: string,\n        line1: string,\n        line2: string,\n        postal_code: string\n    }\n    //}\n}\nconst Payment = () => {\n    const [isLoader, setIsLoader] = React.useState(true);\n    const [showAch, setShowAch] = React.useState(false);\n    const [showCard, setShowCard] = React.useState(false);\n    const [acceptCondition, setAcceptCondition] = React.useState(false);\n    const [paymentSelected, setPaymentSelected] = React.useState(false);\n    const [showOtherAmoutTextField, setShowOtherAmoutTextField] = React.useState(false);\n    const [apicustomerId, setApicustomerId] = useState<string | null>(null);\n    const [customerIdentifier, setCustomerIdentifier] = useState<string | null>(null);\n    const [urlmail, setUrlmail] = useState<string | null>(null);\n    const [urlOrderId, setUrlOrderId] = useState<string | null>(null);\n    const [orderidUrl, setOrderidUrl] = useState<string | null>(null);\n    const [urlContactId, setUrlContactId] = useState<string | null>(null);\n    const [todaysDate, setTodaysDate] = useState<string | null>(null);\n    const [baseUrl, setBaseUrl] = useState<string | null>(null);\n    const [alert, setAlert] = useState({});\n    const [validLink, setvalidLink] = React.useState(false);\n    const [cardType, setCardType] = useState<string | null>(null);\n    const [totalAmount, setTotalAmount] = useState<string | null>(null);\n    const [patientName, setpatientName] = useState<string | null>(null);\n    const [origin, setOrigin] = useState<string | null>(null);\n    const [destination, setDestination] = useState<string | null>(null);\n    const [travelDate, setTravelDate] = useState<string | null>(null);\n    const [dueAmount, setDueAmount] = useState<string | null>(null);\n    const [payableAmount, setPayableAmount] = useState<string | null>(null);\n    const [orderNumber, setOrderNumber] = useState<string | null>(null);\n    const [orderTotal, setOrderTotal] = useState<string | null>(null);\n    const [paidAmount, setPaidAmount] = useState<string | null>(null);\n    const [transactionTotal, setTransactionTotal] = useState<string | null>(null);\n    const [orderOpportunity, setOrderOpportunity] = useState<string | null>(null);\n    const [orderQuote, setOrderQuote] = useState<string | null>(null);\n    const [billingAddress, setBillingAddress] = useState({});\n    const [paymentUrl, setPaymentUrl] = useState('');\n    const [transResponse, setTransResponse] = useState('');\n    const [redirectURL, setRedirectURL] = useState<string | null>(null);\n    //const [transIdUrl, settransIdUrl] = useState('');\n    const [idempotencyKey, setidempotencyKey] = useState('');\n    const [billingCity, setBillingCity] = useState<string | null>(null);\n    const [billingCountry, setBillingCountry] = useState<string | null>(null);\n    const [billingState, setBillingState] = useState<string | null>(null);\n    const [billingPostalcode, setBillingPostalcode] = useState<string | null>(null);\n    const [billingLine1, setBillingLine1] = useState<string | null>(null);\n    const [billingLine2, setBillingLine2] = useState<string | null>(null);\n    const [showBillingDetails, setShowBillingDetails] = React.useState(false);\n    const [chargeAmount, setChargeAmount] = useState<string | null>(null);\n    const [expiredLink, setexpiredLink] = React.useState(false);\n    const [charge, setCharge] = useState('');\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const urlPaymentLinkId = urlParams.get('Id')\n\n    const [radioValue, setRadioValue] = useState('card');\n\n    const radios = [\n        { name: 'Card', value: 'card' },\n    ];\n    const [selectedPaymentOption, setSelectedPaymentOption] = useState('default');\n    console.log(selectedPaymentOption);\n\n    useEffect(() => {\n        if (transResponse) {\n            updatePaymentLinkRecord();\n        }\n        if (!idempotencyKey) {\n            createRandomKey();\n        }\n        if (!apicustomerId) {\n            getPaymentLinkDetails();\n            //getFieldsetData();\n        }\n        if (apicustomerId && dueAmount && orderTotal) {\n            setIsLoader(false);\n        }\n        if (selectedPaymentOption) {\n            console.log(\"selectedPaymentOption\" + selectedPaymentOption)\n            if (selectedPaymentOption === 'default') {\n                if (dueAmount) {\n                    setShowOtherAmoutTextField(false);\n                    setPayableAmount(JSON.stringify(dueAmount));\n                }\n            }\n            else {\n                setShowOtherAmoutTextField(true);\n            }\n        }\n        if (cardType && payableAmount) {\n            let charge = '3';\n            let chargeAmd = (parseInt(charge) / 100) * parseInt(payableAmount)\n            setChargeAmount(JSON.stringify(chargeAmd))\n            setTotalAmount(JSON.stringify(parseInt(payableAmount) + chargeAmd));\n        }\n        if (radioValue === 'card' && apicustomerId) {\n            setShowCard(true);\n        }\n        // if (!apicustomerId) {\n        //     console.log(\"No Id\")\n        //     if (urlContactId && baseUrl) {\n        //         //getContactDetails(urlContactId, baseUrl);\n\n        //     }\n        // }\n    }, [apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey,orderidUrl,transResponse])\n\n    const createRandomKey = () => {\n        var key = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < 10; i++) {\n            key += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        setidempotencyKey(key);\n        //this.idempotencyKey = key;\n        console.log(\"text--idempotencyKey->\" + idempotencyKey);\n        //localStorage.setItem('RandomKey', this.idempotencyKey);\n    }\n    const getPaymentLinkDetails = () => {\n        //-------------- InterACTPay Dev-----------------//\n        //let baseUrl = \"https://crma-pay-developer-edition.na163.force.com/\";\n        //-------- Medviation Dev  ------//\n        //let baseUrl = \"https://crmapay-developer-edition.na213.force.com/\";\n        //------------Medviation Dev Sandbox ----------//\n        let baseUrl = \"https://developer-crmapay.cs214.force.com/\"\n        setBaseUrl(baseUrl);\n        var payLinkParams = { paymentLinkId: urlPaymentLinkId };\n        var url = baseUrl + \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n            JSON.stringify(payLinkParams);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                var apiResponse = [];\n                apiResponse = JSON.parse(response);\n                var amountDue = apiResponse.crma_pay__AmountDue__c;\n                var linkActive = apiResponse.crma_pay__Active__c;\n                if (linkActive == false) {\n                    console.log(\"inside if -->\" + linkActive);\n                    setexpiredLink(true);\n                    updatePaymentLinkRecord();\n                }\n                var apiUrl = apiResponse.crma_pay__PaymentURL__c;\n                let url = new URL(apiUrl);\n                let order =url.searchParams.get(\"orderId\");\n                //setUrlOrderId(url.searchParams.get(\"orderId\"));\n                console.log(\"1id\"+url.searchParams.get(\"orderId\"));\n                console.log(\"2id1\"+order);\n                console.log(\"2id2\"+orderidUrl);\n                setUrlContactId(url.searchParams.get(\"contactId\"));\n                var contact = JSON.stringify(url.searchParams.get(\"contactId\"));\n                console.log(\"2customerIdentifier\");\n                let urlCustomerId = url.searchParams.get(\"customerId\");\n                if (urlCustomerId) {\n                    console.log(\"inside if 1\");\n                    setApicustomerId(urlCustomerId);\n                } else {\n                    if (!customerIdentifier) {\n                        console.log(\"inside else 2\");\n                        getContactDetails(contact, baseUrl);\n                    }\n                    else {\n                        setApicustomerId(customerIdentifier);\n                    }\n                }\n                let urlAmount = url.searchParams.get(\"amount\");\n                setUrlmail(url.searchParams.get(\"mail\"));\n                let createdDate = apiResponse.CreatedDate;\n                let date = new Date(Date.parse(createdDate));\n                var addedDate = date.setHours(date.getHours() + 8);\n                const current = new Date();\n                setTodaysDate(`${current.getFullYear()}-${current.getMonth() + 1\n                    }-${current.getDate()}`);\n                var d1 = new Date(addedDate);\n                var d2 = new Date(current);\n                var timeleft = d1.getTime() - d2.getTime();\n                var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n                var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n                var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n                var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n                console.log(days + ' Day' + hours + ' Hr' + minutes + ' Min' + seconds + ' Sec');\n                let valid = false;\n                if (days >= 0) {\n                    if (hours > 0) {\n                        setvalidLink(true);\n                    }\n                }\n                else {\n                    setexpiredLink(true);\n                    updatePaymentLinkRecord();\n                }\n                var inputJson = apiResponse.crma_pay__JSON_Input__c;\n                var x = JSON.stringify(inputJson);\n                var xy = x.slice(1, x.length - 1);\n                var new1 = xy.replace(/!/g, '\"');\n                var y = JSON.parse(new1);\n                if (y[0].PatientName__c) {\n                    setpatientName(y[0].PatientName__c);\n                }\n                if (y[0].OriginDesired__c) {\n                    setOrigin(y[0].OriginDesired__c);\n                }\n                if (y[0].DestinationDesired__c) {\n                    setDestination(y[0].DestinationDesired__c);\n                }\n                if (y[0].TravelDate__c) {\n                    var dateValue = y[0].TravelDate__c;\n                    setTravelDate(dateValue.substring(0, 10));\n                }\n                // if (y[0].AmountDue__c) {\n                //     setDueAmount(y[0].AmountDue__c);\n                // }\n                console.log(\"beforeorder\"+order);\n                //getOrderDetails(urlOrderId, baseUrl);\n                getOrderDetails(order, baseUrl);\n                getFieldsetData();\n                //getStripeKey();\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n\n    const getFieldsetData = () => {\n        console.log(\"Invoked getFieldsetData\" + urlPaymentLinkId);\n        var ipParams = { inputId: urlPaymentLinkId };\n        // var ipParams = {};\n        // ipParams.inputId = this.urlOrderId;\n        var url =\n            baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n            JSON.stringify(ipParams);\n        console.log(\"FieldsetAPI=====>\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                console.log(\"getFieldsetData-->y------>\" + response);\n                var Reponse = JSON.parse(response);\n                console.log(\"Reponse\" + JSON.stringify(Reponse));\n                console.log(\"Reponse#########\" + Reponse[0].Amount_Due__c);\n                // this.dueAmount = Reponse[0].vlocity_cmt__EffectiveOrderTotal__c;\n                // this.setState({ dueAmount: this.dueAmount });\n                // console.log(\"#########\"+this.state.dueAmount);\n                var dueAmount = Reponse[0].Amount_Due__c;\n                setDueAmount(dueAmount);\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n\n    const getContactDetails = (contactId: string, baseUrl: string) => {\n        console.log(\"invoked create contact\" + JSON.parse(contactId));\n        var contactParams = { contactId: JSON.parse(contactId) };\n        //var contactParams = { contactId: contactId };\n        console.log(\"contactParams\" + JSON.stringify(contactParams));\n        var url = baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" + JSON.stringify(contactParams);\n        //JSON.parse(JSON.stringify(contactParams));\n        console.log(\"url1\" + url);\n        console.log(\"this.contact url ---->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                var contactReponse = JSON.parse(response);\n                var name = contactReponse.Name;\n                var email = contactReponse.Email;\n                createCustomer(name, email, contactId)\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n\n    const createCustomer = (name: string, email: string, contactId: string) => {\n        console.log(\"invoked create customer\");\n        fetch(\n            \"https://api.stripe.com/v1/customers?name=\" + name + \"&email=\" + email,\n            {\n                method: \"POST\",\n                headers: {\n                    \"x-rapidapi-host\": \"https://api.stripe.com\",\n                    Authorization: \" Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((response) => {\n                var newcustomerId = response.id;\n                console.log(\"customer create -->\" + response.id);\n                if (newcustomerId) {\n                    let updateContParams = { contactId: JSON.parse(contactId), customerId: response.id };\n                    var url = baseUrl +\n                        \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n                        JSON.stringify(updateContParams);\n                    console.log(\"this.final url --->\" + url);\n                    fetch(url, {\n                        method: \"GET\",\n                        headers: {\n                            mode: \"cors\",\n                            \"Access-Control-Allow-Origin\": \"*\",\n                        },\n                    })\n                        .then((response) => response.json())\n                        .then((response) => {\n                            console.log(\" update  contact-->\" + JSON.stringify(response));\n                            setApicustomerId(newcustomerId)\n                            setCustomerIdentifier(newcustomerId);\n                        })\n                        .catch((err) => {\n                            console.log(\"err\" + err);\n                        });\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n    const getOrderDetails = (orderId: string | null, baseUrl: string | null) => {\n        console.log(\"invoked order--->\" + orderId);\n        if(orderId){\n            console.log(\"inside order if\");\n         setOrderidUrl(orderId);\n        }\n        var orderParams = { orderId: orderId };\n        var url =\n            baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=GET&inputParams=\" +\n            JSON.stringify(orderParams);\n            console.log(\"orderurl\"+url);\n        console.log(\"this.order url ---->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.text())\n            .then((response) => {\n                response = response.slice(1, response.length - 1);\n                var contactReponse = JSON.parse(response);\n                var orderReponse = JSON.stringify(JSON.parse(response));\n                var orderNum = contactReponse.orderdetails[0].OrderNumber;\n                var total = contactReponse.orderdetails[0].TotalAmount;\n                console.log(\"order1\"+total);\n                setOrderNumber(orderNum);\n                setOrderTotal(total);\n                let initialOrderAmount = '' + total + '';\n                setTransactionTotal(initialOrderAmount);\n                console.log(\"order2\"+transactionTotal);\n                if (contactReponse.orderdetails[0].OpportunityId) {\n                    setOrderOpportunity(contactReponse.orderdetails[0].OpportunityId);\n                    setOrderQuote(contactReponse.orderdetails[0].QuoteId);\n                }\n                if (orderTotal && dueAmount) {\n                    setPaidAmount(JSON.stringify(parseInt(orderTotal) - parseInt(dueAmount)));\n                }\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            })\n    }\n\n    const selectedCardPayment = (id: string, billing_details: {\n        address: {\n            city: string,\n            country: string,\n            state: string,\n            line1: string,\n            line2: string,\n            postal_code: string,\n        }\n    }, card: {\n        brand: string\n    }) => {\n        console.log(\"id\" + id);\n        console.log(\"brand\" + card.brand);\n        if (id) {\n            setPaymentSelected(true);\n        }\n        if (card) {\n            setCardType(card.brand);\n        }\n        let payementUrl = \"https://api.stripe.com/v1/payment_intents?currency=usd&confirm=true&customer=\" + apicustomerId + \"&payment_method=\" + id\n        setPaymentUrl(payementUrl);\n        const billingDetails = billing_details;\n        const billingInfo: BillingData = billingDetails;\n        setBillingAddress({ city: billingInfo.address.city, country: billingInfo.address.country, line1: billingInfo.address.line1, line2: billingInfo.address.line2, postal_code: billingInfo.address.postal_code, state: billingInfo.address.state })\n        setBillingCity(billingInfo.address.city);\n        setBillingCountry(billingInfo.address.country);\n        setBillingLine1(billingInfo.address.line1);\n        setBillingLine2(billingInfo.address.line2);\n        setBillingPostalcode(billingInfo.address.postal_code);\n        setBillingState(billingInfo.address.state);\n        if (billingInfo.address.city || billingInfo.address.country || billingInfo.address.line1 || billingInfo.address.line2 || billingInfo.address.postal_code || billingInfo.address.state) {\n            setShowBillingDetails(true)\n        }\n        console.log(payementUrl);\n    }\n\n    const selectedBankPayment = (id: string) => {\n        if (id) {\n            console.log(\"Bank-Id\" + id);\n            setPaymentSelected(true);\n            let payementUrl = \"https://api.stripe.com/v1/charges?currency=usd&customer=\" + apicustomerId + \"&source=\" + id\n            setPaymentUrl(payementUrl);\n            console.log(payementUrl);\n        }\n    }\n\n    async function makepayment() {\n        setIsLoader(true);\n        fetch(paymentUrl + '&amount=' + totalAmount, {\n            method: \"POST\",\n            headers: {\n                \"x-rapidapi-host\": \"https://api.stripe.com\",\n                Authorization: \" Bearer sk_test_51KFJFDEgsgymTP2QQphWcJtpro03YRfRlWeafatGJpjzXkxu8n79rCl10wrGyMz4avPssaWO0lrnsnvxd2gdLVsd00OCD5BLVA\",\n                \"Idempotency-Key\": idempotencyKey,\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(JSON.stringify('PaymentReaponse' + response));\n                let transactionId = response.id;\n                let transactionstatus = response.status;\n                let gatewayMessage = JSON.parse(\n                    JSON.stringify(response.charges.data[0].outcome.seller_message)\n                );\n                let gatewayStatus = JSON.parse(\n                    JSON.stringify(response.charges.data[0].outcome.network_status)\n                );\n                let currencyCode = response.currency;\n                var localKey = localStorage.getItem('RandomKey');\n                setIsLoader(false);\n                if (localKey !== idempotencyKey) {\n                    createTransactionRecord(transactionId, transactionstatus, gatewayMessage, gatewayStatus, currencyCode);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function createTransactionRecord(\n        transactionId: string,\n        transactionstatus: string,\n        gatewayMessage: string,\n        gatewayStatus: string,\n        currencyCode: string\n    ) {\n        setIsLoader(true);\n        // if (this.urlContactId) {\n        //   this.contactId = this.urlContactId;\n        // } else {\n        //   this.contactId = this.newContactId;\n        // }\n        // if (this.urlmail) {\n        //   this.mail = this.urlmail;\n        // } else {\n        //   this.mail = this.email;\n        // }\n        //var amount = '\"'+ this.payingAmount+  '\"';\n        //console.log(\"New amount------>\"+amount);\n        //const amount = this.payingAmount;\n\n        console.log(\"order14\"+orderidUrl);\n        var transactionParams = {\n            paymentGatewayIdentifier: transactionId,\n            Amount: payableAmount,\n            transactionEmail: urlmail,\n            transactionCurrencyCode: currencyCode,\n            //transactionOrder: urlOrderId,\n            transactionOrder: orderidUrl,\n            transactionContact: urlContactId,\n            processedDateTime: todaysDate,\n            transactionStatus: transactionstatus,\n            gatewayMessage: gatewayMessage,\n            gatewayNetworkStatus: gatewayStatus,\n            transactionQuote: orderQuote,\n            transctionOpportunity: orderOpportunity,\n            billingStreet: billingLine1,\n            billingCity: billingCity,\n            billingCountry: billingCountry,\n            billingState: billingState,\n            billingZip: billingPostalcode\n        };\n\n        var url = baseUrl +\n            \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n            JSON.stringify(transactionParams);\n        console.log(\"this.final transaction url --->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                if (response) {\n                    console.log('LstResponse------------------------->' + response);\n                    var xy = response;\n                    console.log(\"xxxx->\" + xy);\n                    setTransResponse(xy);\n                    console.log('transid------------------------->' + transResponse);\n\n                    localStorage.setItem('RandomKey', idempotencyKey);\n                    setIsLoader(false);\n                    //setAlert({ status: 'success', message: ' Your payment is successfully completed ' });\n                    if (redirectURL) {\n                        window.location.href = redirectURL;\n                    }\n                    //getPaymentLinkDetails();\n                    //this.transIdUrl = response;\n                    //var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page' + '?transId=' + this.transIdUrl;\n                    //console.log(\"invoked redirecturl\" + redirectUrl);\n                    if (response) {\n                        console.log('transid--------if----------------->' + transResponse);\n                        updatePaymentLinkRecord();\n                        // var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page'+'?transId=' + transResponse;\n                        // console.log(\"redirecturl-->\"+redirectUrl);\n                        // navigateTo(redirectUrl);\n                    }\n                    //   var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page'+'?transId=' + transResponse;\n                    //     console.log(\"redirecturl-->\"+redirectUrl);\n                    //     navigateTo(redirectUrl);\n\n                }\n                console.log(\" create  transaction-->\" + JSON.stringify(response));\n                // Med Sandbox\n                var redirectUrl = 'https://developer-medviation.cs214.force.com/xchng/s/invoice-page'+'?transId=' + response;\n                //Med Dev\n                //var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page' + '?transId=' + response;\n                console.log(\"redirecturl-->\" + redirectUrl);\n                navigateTo(redirectUrl);\n            })\n            .catch((err) => {\n                setIsLoader(false);\n                setAlert({ status: 'fail', message: 'Something went wrong' });\n                console.log(\"err\" + err);\n            });\n    }\n    function navigateTo(url: string) {\n        console.log(\"Invoked navigation function-->\");\n        window.location.href = url;\n    }\n\n    const updatePaymentLinkRecord = () => {\n        console.log(\"Invoked Update PayLink\" + transResponse);\n        //var transId = settransIdUrl;\n        if (transResponse) {\n            var payLinkRcdParamsWithId = {\n                paymentLinkId: urlPaymentLinkId,\n                PaymentTransaction: transResponse,\n                Active: false\n            };\n            var url =\n                baseUrl +\n                \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n                JSON.stringify(payLinkRcdParamsWithId);\n        } else {\n            var payLinkRcdParams = {\n                paymentLinkId: urlPaymentLinkId,\n                Active: false\n            };\n            var url =\n                baseUrl +\n                \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n                JSON.stringify(payLinkRcdParams);\n        }\n        // var url =\n        //   baseUrl +\n        //   \"InteractPay/services/apexrest/crma_pay/InterACTPayAuthorizationUpdated/?methodType=POST&inputParams=\" +\n        //   JSON.stringify(payLinkRcdParams);\n        console.log(\"this.final transaction url --->\" + url);\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                mode: \"cors\",\n                \"Access-Control-Allow-Origin\": \"*\",\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(\" update  payLink-->\" + JSON.stringify(response));\n                // var redirectUrl = 'https://medviation-developer-edition.na213.force.com/s/invoice-page'+'?transId=' + transResponse;\n                // console.log(\"redirecturl-->\"+redirectUrl);\n                // navigateTo(redirectUrl);\n            })\n            .catch((err) => {\n                console.log(\"err\" + err);\n            });\n    }\n\n    const setPayType = (payType: string) => {\n        setSelectedPaymentOption(payType);\n    }\n    return (\n        <>\n            {isLoader ? <Spinner /> : null}\n            <Alert alert={alert} setAlert={setAlert} />\n            {expiredLink ? <div className='container'><div className=\"alert alert-danger opacity-75 mt-5\" role=\"alert\">\n                <h4 className=\"alert-heading\">Oops!</h4>\n                <p>This link is expired.</p>\n                <hr />\n                <p className=\"mb-0\">This URL is not valid anymore.</p>\n            </div> </div> :\n                <div className=\"payment-container container\">\n                    <div className=\"row m-0\">\n                        <div className=\"col-md-7 col-12\">\n                            <div className=\"row\">\n                                <div className=\"col-12 mb-4\">\n                                    <div className=\"row box-right card-bg-img\">\n                                        <div className=\"col-md-8 ps-0 \">\n                                            <p className=\"ps-3 textmuted fw-bold h6 mb-0\">TOTAL AMOUNT</p>\n                                            <p className=\"h1 fw-bold d-flex\"> <span\n                                                className=\" fas fa-dollar-sign textmuted pe-1 h6 align-text-top mt-1\"></span>{numberFormat(orderTotal)}\n                                                {/* <span className=\"textmuted\">.58</span> */}\n                                            </p>\n                                            {/* <p className=\"ms-3 px-2 bg-green\">+10% since last month</p> */}\n                                        </div>\n                                        <div className=\"col-md-4\">\n                                            <p className=\"p-org\"> <span className=\"fas fa-circle pe-2\"></span>Due amount </p>\n                                            <p className=\"fw-bold mb-3\">{numberFormat(dueAmount)}\n                                            </p>\n                                            {/* <p className=\"p-blue\"><span className=\"fas fa-circle pe-2\"></span>Amount Paid</p>\n                                        <p className=\"fw-bold\">{numberFormat(paidAmount)}\n                                        </p> */}\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-12 px-0 mb-4\">\n                                    <div className=\"box-right card-bg-img\">\n                                        <div className=\"d-flex pb-2\">\n                                            <p className=\"fw-bold h7\">\n                                                Order Summary  <span className=\"textmuted\"> / ({orderNumber})</span></p>\n                                            <p className=\"ms-auto p-blue text-end\">\n                                            </p>\n                                        </div>\n                                        <div className=\"row pb-2\">\n                                            <div className=\"col-6\">\n                                                <p className=\"textmuted h8\">Patient Name</p>\n                                                <p className='h7'>{patientName ? patientName : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                    <Placeholder xs={7} />\n                                                </Placeholder>}\n                                                </p>\n                                            </div>\n                                            <div className=\"col-6 text-end\">\n                                                <p className=\"textmuted h8\">Travel Date</p>\n                                                <p className='h7'>{travelDate ? travelDate : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                    <Placeholder xs={7} />\n                                                </Placeholder>}</p>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col-6\">\n                                                <p className=\"textmuted h8\">Orgin</p>\n                                                <p className='h7'>{origin ? origin : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                    <Placeholder xs={7} />\n                                                </Placeholder>}</p>\n                                            </div>\n                                            <div className=\"col-6 text-end\">\n                                                <p className=\"textmuted h8\">Destination</p>\n                                                <p className='h7'>{destination ? destination : <Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                                    <Placeholder xs={7} />\n                                                </Placeholder>} </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {showBillingDetails ?\n                                    <div className=\"col-12 px-0\">\n                                        <div className=\"box-right card-bg-img\">\n                                            <div className=\"d-flex mb-2\">\n                                                <p className=\"fw-bold\">Billing address</p>\n                                            </div>\n                                            <div className=\"mb-2\">\n                                                <p className=\"h7 mb-1\">{billingCity} </p>\n                                                <p className=\"h7 mb-1\">{billingLine1}, {billingLine2}</p>\n                                                <p className=\"h7 \"><span>{billingState}</span> ,<span> {billingCountry} </span> <span> {billingPostalcode}</span></p>\n                                            </div>\n                                        </div>\n                                    </div> : ''}\n                            </div>\n                        </div>\n                        <div className=\"col-md-5 col-12 ps-md-5 p-0 \">\n                            <div className=\"box-left card-bg-img\">\n\n                                <div className=\"\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <p className=\"fw-bold h7 mb-1 pt-2\">Choose Payment Method</p>\n                                        </div>\n                                        <div className=\"col-md-6 float-right text-end\">\n                                            <ButtonGroup>\n                                                {radios.map((radio, idx) => (\n                                                    <ToggleButton\n                                                        key={idx}\n                                                        id={`radio-${idx}`}\n                                                        type=\"radio\"\n                                                        variant={idx % 2 ? 'outline-primary' : 'outline-primary'}\n                                                        name=\"radio\"\n                                                        size=\"sm\"\n                                                        value={radio.value}\n                                                        checked={radioValue === radio.value}\n                                                        onChange={(e) => {\n                                                            setShowBillingDetails(false);\n                                                            setPaymentSelected(false);\n                                                            setRadioValue(e.currentTarget.value); if (e.currentTarget.value === 'card') {\n                                                                setShowCard(true);\n                                                                setShowAch(false);\n                                                            } else { setShowAch(true); setShowCard(false); }\n                                                        }}\n                                                    >\n                                                        {radio.name}\n                                                    </ToggleButton>\n                                                ))}\n                                            </ButtonGroup>\n                                        </div>\n                                    </div>\n                                    <p className=\"textmuted h8 mb-0\">Please choose any payment method to continue</p>\n                                    <div className=\"\">\n                                        {showAch ? <Plaid apicustomerid={apicustomerId} selectedBankPayment={selectedBankPayment} /> : null}\n                                    </div>\n                                    <div className=\"\">\n                                        {showCard ? <Stripe apicustomerid={apicustomerId} selectedCardPayment={selectedCardPayment} /> : null}\n                                    </div>\n                                    {showCard || showAch ? null : <div className=\"card card-body bg-light- d-flex flex-row justify-content-between align-items-center mb-3\"><Placeholder className=\"w-100 h9\" animation=\"glow\">\n                                        <Placeholder xs={7} /> <Placeholder xs={4} /> <Placeholder xs={4} />{' '}\n                                        <Placeholder xs={6} /> <Placeholder xs={8} />\n                                    </Placeholder></div>}\n                                </div>\n                                <div className='mb-2'>\n                                    <form className=\"list-group\">\n                                        <label className=\"list-group-item\">\n                                            <div className=\"row\">\n                                                <div className='col-1 py-2'>\n                                                    <input type=\"radio\" className=\"me-3\" id=\"default\" name=\"Default-Payment\" value=\"default\" checked={selectedPaymentOption === 'default'} onChange={(e) => {\n                                                        setPayType(e.target.value)\n                                                    }} disabled={!paymentSelected} /></div>\n                                                <div className='col-5 py-2'>\n                                                    Total amount due\n                                                </div>\n                                                <div className='col-6 py-2 text-end'>\n                                                    {numberFormat(dueAmount)}\n                                                </div>\n                                            </div>\n                                        </label>\n                                        <label className=\"list-group-item\">\n                                            <div className=\"row\">\n                                                <div className='col-1 py-2'>\n                                                    <input type=\"radio\" className=\"me-3\" id=\"other-payment\" name=\"other-payment\" value=\"other-payment\" checked={selectedPaymentOption === 'other-payment'} onChange={(e) => {\n                                                        setPayType(e.target.value); setPayableAmount(''); setTotalAmount(''); setChargeAmount('');\n                                                    }} disabled={!paymentSelected} /></div>\n                                                <div className='col-5 py-2'>\n                                                    Other amount\n                                                </div>\n                                                <div className='col-6 text-end'>\n                                                    {showOtherAmoutTextField ?\n                                                        <div className=\"input-group\">\n                                                            <span className=\"input-group-text\">$</span>\n                                                            <input type=\"text\" className=\"form-control border-end-0 text-end pe-0\" aria-label=\"Amount (to the nearest dollar)\" onKeyUp={(e) => {\n                                                                setPayableAmount(e.currentTarget.value);\n                                                            }} />\n                                                            <span className=\"input-group-text bg-transparent ps-0\">.00</span>\n                                                        </div> : null}\n                                                </div>\n                                            </div>\n                                        </label>\n                                    </form>\n                                </div>\n                                <div>\n                                    <div className=\"h8\">\n                                        <div className=\"row m-0 border-bottom mb-3\">\n                                            <div className=\"col-8 h8 pe-0 ps-2\">\n                                                <span className=\"d-block py-2\">Payment Charge</span>\n                                            </div>\n                                            <div className=\"col-4 p-0 pe-2 text-end\">\n                                                <span className=\"d-block py-2\">{numberFormat(chargeAmount)}</span>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"d-flex h7 mb-2 px-2\">\n                                            <p className=\"\">Total Amount</p>\n                                            <p className=\"ms-auto\"> <span className='fw-bold'>{numberFormat(totalAmount)}</span></p>\n                                        </div>\n                                        <div className=\"h8 mb-4\">\n                                            <Form.Check aria-label=\"option 1\" label='I agree to the Terms of Service and Privacy Policy' onChange={(e) => { setAcceptCondition(e.target.checked) }} disabled={!paymentSelected} />\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <button className=\"btn btn-primary d-block h8 w-100\" onClick={makepayment} disabled={!acceptCondition}>PAY NOW\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div >}\n\n        </>\n    )\n}\nexport default Payment;\n","/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Pages/Admin.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/lib/numberFormat.js",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/Stripe.tsx",["438","439","440","441","442","443","444","445","446","447"],[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Spinner/spinner.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Alert/Alert.tsx",["448"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Plaid/Plaid.tsx",["449","450","451","452","453","454","455","456","457","458","459","460","461"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/StripeCardList/StripeCardList.tsx",["462","463","464","465","466"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/AddCard/AddCard.tsx",["467","468","469","470"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Stripe/StripeAccList/StripeAccList.tsx",["471","472","473","474","475"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/Plaid/PlaidAccountList/PlaidAccountList.tsx",["476","477","478"],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/Card/index.tsx",[],[],"/Users/akshayasreekumar/Documents/InterACTPayV2MedTest/interactpay/client/src/components/CardManager/CardForm/index.tsx",[],[],{"ruleId":"479","severity":1,"message":"480","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":12},{"ruleId":"483","severity":1,"message":"484","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"485","line":36,"column":12,"nodeType":"481","messageId":"482","endLine":36,"endColumn":21},{"ruleId":"479","severity":1,"message":"486","line":47,"column":12,"nodeType":"481","messageId":"482","endLine":47,"endColumn":22},{"ruleId":"479","severity":1,"message":"487","line":48,"column":12,"nodeType":"481","messageId":"482","endLine":48,"endColumn":28},{"ruleId":"479","severity":1,"message":"488","line":51,"column":12,"nodeType":"481","messageId":"482","endLine":51,"endColumn":26},{"ruleId":"479","severity":1,"message":"489","line":54,"column":25,"nodeType":"481","messageId":"482","endLine":54,"endColumn":39},{"ruleId":"479","severity":1,"message":"490","line":66,"column":12,"nodeType":"481","messageId":"482","endLine":66,"endColumn":18},{"ruleId":"479","severity":1,"message":"491","line":66,"column":20,"nodeType":"481","messageId":"482","endLine":66,"endColumn":29},{"ruleId":"492","severity":1,"message":"493","line":112,"column":8,"nodeType":"494","endLine":112,"endColumn":157,"suggestions":"495"},{"ruleId":"479","severity":1,"message":"496","line":143,"column":21,"nodeType":"481","messageId":"482","endLine":143,"endColumn":30},{"ruleId":"497","severity":1,"message":"498","line":145,"column":30,"nodeType":"499","messageId":"500","endLine":145,"endColumn":32},{"ruleId":"479","severity":1,"message":"501","line":159,"column":21,"nodeType":"481","messageId":"482","endLine":159,"endColumn":30},{"ruleId":"479","severity":1,"message":"502","line":175,"column":21,"nodeType":"481","messageId":"482","endLine":175,"endColumn":26},{"ruleId":"479","severity":1,"message":"503","line":268,"column":21,"nodeType":"481","messageId":"482","endLine":268,"endColumn":33},{"ruleId":"504","severity":1,"message":"505","line":472,"column":17,"nodeType":"481","messageId":"506","endLine":472,"endColumn":20},{"ruleId":"479","severity":1,"message":"507","line":4,"column":10,"nodeType":"481","messageId":"482","endLine":4,"endColumn":24},{"ruleId":"479","severity":1,"message":"508","line":4,"column":26,"nodeType":"481","messageId":"482","endLine":4,"endColumn":31},{"ruleId":"479","severity":1,"message":"509","line":32,"column":10,"nodeType":"481","messageId":"482","endLine":32,"endColumn":18},{"ruleId":"479","severity":1,"message":"510","line":32,"column":20,"nodeType":"481","messageId":"482","endLine":32,"endColumn":31},{"ruleId":"479","severity":1,"message":"511","line":33,"column":10,"nodeType":"481","messageId":"482","endLine":33,"endColumn":20},{"ruleId":"479","severity":1,"message":"512","line":35,"column":10,"nodeType":"481","messageId":"482","endLine":35,"endColumn":14},{"ruleId":"479","severity":1,"message":"513","line":35,"column":16,"nodeType":"481","messageId":"482","endLine":35,"endColumn":23},{"ruleId":"479","severity":1,"message":"514","line":36,"column":10,"nodeType":"481","messageId":"482","endLine":36,"endColumn":23},{"ruleId":"479","severity":1,"message":"515","line":36,"column":25,"nodeType":"481","messageId":"482","endLine":36,"endColumn":41},{"ruleId":"479","severity":1,"message":"516","line":43,"column":9,"nodeType":"481","messageId":"482","endLine":43,"endColumn":13},{"ruleId":"479","severity":1,"message":"517","line":44,"column":9,"nodeType":"481","messageId":"482","endLine":44,"endColumn":15},{"ruleId":"479","severity":1,"message":"518","line":45,"column":9,"nodeType":"481","messageId":"482","endLine":45,"endColumn":18},{"ruleId":"492","severity":1,"message":"519","line":60,"column":6,"nodeType":"494","endLine":60,"endColumn":8,"suggestions":"520"},{"ruleId":"479","severity":1,"message":"521","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":23},{"ruleId":"479","severity":1,"message":"521","line":4,"column":17,"nodeType":"481","messageId":"482","endLine":4,"endColumn":23},{"ruleId":"479","severity":1,"message":"522","line":48,"column":10,"nodeType":"481","messageId":"482","endLine":48,"endColumn":23},{"ruleId":"479","severity":1,"message":"523","line":48,"column":25,"nodeType":"481","messageId":"482","endLine":48,"endColumn":41},{"ruleId":"492","severity":1,"message":"519","line":54,"column":6,"nodeType":"494","endLine":54,"endColumn":8,"suggestions":"524"},{"ruleId":"479","severity":1,"message":"525","line":89,"column":9,"nodeType":"481","messageId":"482","endLine":89,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":121,"column":15,"nodeType":"481","messageId":"482","endLine":121,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":125,"column":13,"nodeType":"481","messageId":"482","endLine":125,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":126,"column":13,"nodeType":"481","messageId":"482","endLine":126,"endColumn":17},{"ruleId":"479","severity":1,"message":"526","line":154,"column":13,"nodeType":"481","messageId":"482","endLine":154,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":155,"column":13,"nodeType":"481","messageId":"482","endLine":155,"endColumn":17},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"529","line":1,"column":30,"nodeType":"481","messageId":"482","endLine":1,"endColumn":38},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":19,"column":12,"nodeType":"481","messageId":"482","endLine":19,"endColumn":18},{"ruleId":"479","severity":1,"message":"533","line":19,"column":20,"nodeType":"481","messageId":"482","endLine":19,"endColumn":29},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":43,"column":10,"nodeType":"481","messageId":"482","endLine":43,"endColumn":16},{"ruleId":"479","severity":1,"message":"534","line":85,"column":12,"nodeType":"481","messageId":"482","endLine":85,"endColumn":27},{"ruleId":"479","severity":1,"message":"535","line":3,"column":16,"nodeType":"481","messageId":"482","endLine":3,"endColumn":20},{"ruleId":"479","severity":1,"message":"536","line":6,"column":22,"nodeType":"481","messageId":"482","endLine":6,"endColumn":45},{"ruleId":"479","severity":1,"message":"537","line":24,"column":9,"nodeType":"481","messageId":"482","endLine":24,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":40,"column":11,"nodeType":"481","messageId":"482","endLine":40,"endColumn":37},{"ruleId":"479","severity":1,"message":"521","line":2,"column":10,"nodeType":"481","messageId":"482","endLine":2,"endColumn":16},{"ruleId":"479","severity":1,"message":"539","line":2,"column":18,"nodeType":"481","messageId":"482","endLine":2,"endColumn":21},{"ruleId":"479","severity":1,"message":"540","line":2,"column":23,"nodeType":"481","messageId":"482","endLine":2,"endColumn":32},{"ruleId":"479","severity":1,"message":"541","line":2,"column":34,"nodeType":"481","messageId":"482","endLine":2,"endColumn":37},{"ruleId":"479","severity":1,"message":"542","line":9,"column":3,"nodeType":"481","messageId":"482","endLine":9,"endColumn":22},{"ruleId":"479","severity":1,"message":"543","line":32,"column":21,"nodeType":"481","messageId":"482","endLine":32,"endColumn":33},{"ruleId":"479","severity":1,"message":"544","line":35,"column":23,"nodeType":"481","messageId":"482","endLine":35,"endColumn":37},{"ruleId":"479","severity":1,"message":"545","line":86,"column":12,"nodeType":"481","messageId":"482","endLine":86,"endColumn":30},{"ruleId":"479","severity":1,"message":"546","line":177,"column":12,"nodeType":"481","messageId":"482","endLine":177,"endColumn":30},{"ruleId":"479","severity":1,"message":"526","line":227,"column":13,"nodeType":"481","messageId":"482","endLine":227,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":228,"column":13,"nodeType":"481","messageId":"482","endLine":228,"endColumn":17},{"ruleId":"483","severity":1,"message":"547","line":1,"column":10,"nodeType":"481","messageId":"482","endLine":1,"endColumn":22},{"ruleId":"483","severity":1,"message":"503","line":19,"column":13,"nodeType":"481","messageId":"482","endLine":19,"endColumn":25},{"ruleId":"483","severity":1,"message":"548","line":20,"column":13,"nodeType":"481","messageId":"482","endLine":20,"endColumn":22},{"ruleId":"483","severity":1,"message":"549","line":22,"column":13,"nodeType":"481","messageId":"482","endLine":22,"endColumn":24},{"ruleId":"479","severity":1,"message":"480","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":12},{"ruleId":"483","severity":1,"message":"484","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"485","line":36,"column":12,"nodeType":"481","messageId":"482","endLine":36,"endColumn":21},{"ruleId":"479","severity":1,"message":"486","line":47,"column":12,"nodeType":"481","messageId":"482","endLine":47,"endColumn":22},{"ruleId":"479","severity":1,"message":"487","line":48,"column":12,"nodeType":"481","messageId":"482","endLine":48,"endColumn":28},{"ruleId":"479","severity":1,"message":"488","line":51,"column":12,"nodeType":"481","messageId":"482","endLine":51,"endColumn":26},{"ruleId":"479","severity":1,"message":"489","line":54,"column":25,"nodeType":"481","messageId":"482","endLine":54,"endColumn":39},{"ruleId":"479","severity":1,"message":"490","line":66,"column":12,"nodeType":"481","messageId":"482","endLine":66,"endColumn":18},{"ruleId":"479","severity":1,"message":"491","line":66,"column":20,"nodeType":"481","messageId":"482","endLine":66,"endColumn":29},{"ruleId":"492","severity":1,"message":"550","line":111,"column":8,"nodeType":"494","endLine":111,"endColumn":157,"suggestions":"551"},{"ruleId":"479","severity":1,"message":"496","line":147,"column":21,"nodeType":"481","messageId":"482","endLine":147,"endColumn":30},{"ruleId":"497","severity":1,"message":"498","line":149,"column":30,"nodeType":"499","messageId":"500","endLine":149,"endColumn":32},{"ruleId":"479","severity":1,"message":"501","line":163,"column":21,"nodeType":"481","messageId":"482","endLine":163,"endColumn":30},{"ruleId":"479","severity":1,"message":"502","line":179,"column":21,"nodeType":"481","messageId":"482","endLine":179,"endColumn":26},{"ruleId":"479","severity":1,"message":"503","line":273,"column":21,"nodeType":"481","messageId":"482","endLine":273,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":451,"column":106,"nodeType":"499","messageId":"554","endLine":451,"endColumn":107},{"ruleId":"504","severity":1,"message":"555","line":457,"column":19,"nodeType":"481","messageId":"506","endLine":457,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":457,"column":102,"nodeType":"499","messageId":"554","endLine":457,"endColumn":103},{"ruleId":"504","severity":1,"message":"505","line":490,"column":17,"nodeType":"481","messageId":"506","endLine":490,"endColumn":20},{"ruleId":"479","severity":1,"message":"521","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":23},{"ruleId":"479","severity":1,"message":"507","line":4,"column":10,"nodeType":"481","messageId":"482","endLine":4,"endColumn":24},{"ruleId":"479","severity":1,"message":"508","line":4,"column":26,"nodeType":"481","messageId":"482","endLine":4,"endColumn":31},{"ruleId":"479","severity":1,"message":"509","line":32,"column":10,"nodeType":"481","messageId":"482","endLine":32,"endColumn":18},{"ruleId":"479","severity":1,"message":"510","line":32,"column":20,"nodeType":"481","messageId":"482","endLine":32,"endColumn":31},{"ruleId":"479","severity":1,"message":"511","line":33,"column":10,"nodeType":"481","messageId":"482","endLine":33,"endColumn":20},{"ruleId":"479","severity":1,"message":"512","line":35,"column":10,"nodeType":"481","messageId":"482","endLine":35,"endColumn":14},{"ruleId":"479","severity":1,"message":"513","line":35,"column":16,"nodeType":"481","messageId":"482","endLine":35,"endColumn":23},{"ruleId":"479","severity":1,"message":"514","line":36,"column":10,"nodeType":"481","messageId":"482","endLine":36,"endColumn":23},{"ruleId":"479","severity":1,"message":"515","line":36,"column":25,"nodeType":"481","messageId":"482","endLine":36,"endColumn":41},{"ruleId":"479","severity":1,"message":"516","line":43,"column":9,"nodeType":"481","messageId":"482","endLine":43,"endColumn":13},{"ruleId":"479","severity":1,"message":"517","line":44,"column":9,"nodeType":"481","messageId":"482","endLine":44,"endColumn":15},{"ruleId":"479","severity":1,"message":"518","line":45,"column":9,"nodeType":"481","messageId":"482","endLine":45,"endColumn":18},{"ruleId":"492","severity":1,"message":"519","line":60,"column":6,"nodeType":"494","endLine":60,"endColumn":8,"suggestions":"556"},{"ruleId":"479","severity":1,"message":"521","line":4,"column":17,"nodeType":"481","messageId":"482","endLine":4,"endColumn":23},{"ruleId":"479","severity":1,"message":"522","line":48,"column":10,"nodeType":"481","messageId":"482","endLine":48,"endColumn":23},{"ruleId":"479","severity":1,"message":"523","line":48,"column":25,"nodeType":"481","messageId":"482","endLine":48,"endColumn":41},{"ruleId":"492","severity":1,"message":"519","line":54,"column":6,"nodeType":"494","endLine":54,"endColumn":8,"suggestions":"557"},{"ruleId":"479","severity":1,"message":"525","line":89,"column":9,"nodeType":"481","messageId":"482","endLine":89,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":121,"column":15,"nodeType":"481","messageId":"482","endLine":121,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":125,"column":13,"nodeType":"481","messageId":"482","endLine":125,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":126,"column":13,"nodeType":"481","messageId":"482","endLine":126,"endColumn":17},{"ruleId":"479","severity":1,"message":"526","line":154,"column":13,"nodeType":"481","messageId":"482","endLine":154,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":155,"column":13,"nodeType":"481","messageId":"482","endLine":155,"endColumn":17},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":19,"column":12,"nodeType":"481","messageId":"482","endLine":19,"endColumn":18},{"ruleId":"479","severity":1,"message":"533","line":19,"column":20,"nodeType":"481","messageId":"482","endLine":19,"endColumn":29},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":43,"column":10,"nodeType":"481","messageId":"482","endLine":43,"endColumn":16},{"ruleId":"479","severity":1,"message":"534","line":85,"column":12,"nodeType":"481","messageId":"482","endLine":85,"endColumn":27},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"529","line":1,"column":30,"nodeType":"481","messageId":"482","endLine":1,"endColumn":38},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"535","line":3,"column":16,"nodeType":"481","messageId":"482","endLine":3,"endColumn":20},{"ruleId":"479","severity":1,"message":"536","line":6,"column":22,"nodeType":"481","messageId":"482","endLine":6,"endColumn":45},{"ruleId":"479","severity":1,"message":"537","line":24,"column":9,"nodeType":"481","messageId":"482","endLine":24,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":40,"column":11,"nodeType":"481","messageId":"482","endLine":40,"endColumn":37},{"ruleId":"479","severity":1,"message":"480","line":2,"column":8,"nodeType":"481","messageId":"482","endLine":2,"endColumn":12},{"ruleId":"483","severity":1,"message":"484","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":26},{"ruleId":"479","severity":1,"message":"558","line":32,"column":12,"nodeType":"481","messageId":"482","endLine":32,"endColumn":22},{"ruleId":"479","severity":1,"message":"559","line":32,"column":24,"nodeType":"481","messageId":"482","endLine":32,"endColumn":37},{"ruleId":"479","severity":1,"message":"485","line":38,"column":12,"nodeType":"481","messageId":"482","endLine":38,"endColumn":21},{"ruleId":"479","severity":1,"message":"486","line":49,"column":12,"nodeType":"481","messageId":"482","endLine":49,"endColumn":22},{"ruleId":"479","severity":1,"message":"488","line":53,"column":12,"nodeType":"481","messageId":"482","endLine":53,"endColumn":26},{"ruleId":"479","severity":1,"message":"489","line":56,"column":25,"nodeType":"481","messageId":"482","endLine":56,"endColumn":39},{"ruleId":"479","severity":1,"message":"490","line":68,"column":12,"nodeType":"481","messageId":"482","endLine":68,"endColumn":18},{"ruleId":"479","severity":1,"message":"491","line":68,"column":20,"nodeType":"481","messageId":"482","endLine":68,"endColumn":29},{"ruleId":"492","severity":1,"message":"550","line":123,"column":8,"nodeType":"494","endLine":123,"endColumn":170,"suggestions":"560"},{"ruleId":"479","severity":1,"message":"496","line":159,"column":21,"nodeType":"481","messageId":"482","endLine":159,"endColumn":30},{"ruleId":"497","severity":1,"message":"498","line":161,"column":32,"nodeType":"499","messageId":"500","endLine":161,"endColumn":34},{"ruleId":"479","severity":1,"message":"501","line":189,"column":21,"nodeType":"481","messageId":"482","endLine":189,"endColumn":30},{"ruleId":"479","severity":1,"message":"502","line":205,"column":21,"nodeType":"481","messageId":"482","endLine":205,"endColumn":26},{"ruleId":"479","severity":1,"message":"503","line":380,"column":21,"nodeType":"481","messageId":"482","endLine":380,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":570,"column":102,"nodeType":"499","messageId":"554","endLine":570,"endColumn":103},{"ruleId":"504","severity":1,"message":"505","line":605,"column":17,"nodeType":"481","messageId":"506","endLine":605,"endColumn":20},{"ruleId":"479","severity":1,"message":"521","line":4,"column":17,"nodeType":"481","messageId":"482","endLine":4,"endColumn":23},{"ruleId":"479","severity":1,"message":"522","line":48,"column":10,"nodeType":"481","messageId":"482","endLine":48,"endColumn":23},{"ruleId":"479","severity":1,"message":"523","line":48,"column":25,"nodeType":"481","messageId":"482","endLine":48,"endColumn":41},{"ruleId":"492","severity":1,"message":"519","line":54,"column":6,"nodeType":"494","endLine":54,"endColumn":8,"suggestions":"561"},{"ruleId":"479","severity":1,"message":"525","line":89,"column":9,"nodeType":"481","messageId":"482","endLine":89,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":121,"column":15,"nodeType":"481","messageId":"482","endLine":121,"endColumn":22},{"ruleId":"479","severity":1,"message":"526","line":125,"column":13,"nodeType":"481","messageId":"482","endLine":125,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":126,"column":13,"nodeType":"481","messageId":"482","endLine":126,"endColumn":17},{"ruleId":"479","severity":1,"message":"526","line":154,"column":13,"nodeType":"481","messageId":"482","endLine":154,"endColumn":20},{"ruleId":"479","severity":1,"message":"527","line":155,"column":13,"nodeType":"481","messageId":"482","endLine":155,"endColumn":17},{"ruleId":"479","severity":1,"message":"521","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":23},{"ruleId":"479","severity":1,"message":"507","line":4,"column":10,"nodeType":"481","messageId":"482","endLine":4,"endColumn":24},{"ruleId":"479","severity":1,"message":"508","line":4,"column":26,"nodeType":"481","messageId":"482","endLine":4,"endColumn":31},{"ruleId":"479","severity":1,"message":"509","line":32,"column":10,"nodeType":"481","messageId":"482","endLine":32,"endColumn":18},{"ruleId":"479","severity":1,"message":"510","line":32,"column":20,"nodeType":"481","messageId":"482","endLine":32,"endColumn":31},{"ruleId":"479","severity":1,"message":"511","line":33,"column":10,"nodeType":"481","messageId":"482","endLine":33,"endColumn":20},{"ruleId":"479","severity":1,"message":"512","line":35,"column":10,"nodeType":"481","messageId":"482","endLine":35,"endColumn":14},{"ruleId":"479","severity":1,"message":"513","line":35,"column":16,"nodeType":"481","messageId":"482","endLine":35,"endColumn":23},{"ruleId":"479","severity":1,"message":"514","line":36,"column":10,"nodeType":"481","messageId":"482","endLine":36,"endColumn":23},{"ruleId":"479","severity":1,"message":"515","line":36,"column":25,"nodeType":"481","messageId":"482","endLine":36,"endColumn":41},{"ruleId":"479","severity":1,"message":"516","line":43,"column":9,"nodeType":"481","messageId":"482","endLine":43,"endColumn":13},{"ruleId":"479","severity":1,"message":"517","line":44,"column":9,"nodeType":"481","messageId":"482","endLine":44,"endColumn":15},{"ruleId":"479","severity":1,"message":"518","line":45,"column":9,"nodeType":"481","messageId":"482","endLine":45,"endColumn":18},{"ruleId":"492","severity":1,"message":"519","line":60,"column":6,"nodeType":"494","endLine":60,"endColumn":8,"suggestions":"562"},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":43,"column":10,"nodeType":"481","messageId":"482","endLine":43,"endColumn":16},{"ruleId":"479","severity":1,"message":"534","line":85,"column":12,"nodeType":"481","messageId":"482","endLine":85,"endColumn":27},{"ruleId":"479","severity":1,"message":"535","line":3,"column":16,"nodeType":"481","messageId":"482","endLine":3,"endColumn":20},{"ruleId":"479","severity":1,"message":"536","line":6,"column":22,"nodeType":"481","messageId":"482","endLine":6,"endColumn":45},{"ruleId":"479","severity":1,"message":"537","line":24,"column":9,"nodeType":"481","messageId":"482","endLine":24,"endColumn":17},{"ruleId":"479","severity":1,"message":"538","line":40,"column":11,"nodeType":"481","messageId":"482","endLine":40,"endColumn":37},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},{"ruleId":"479","severity":1,"message":"531","line":2,"column":25,"nodeType":"481","messageId":"482","endLine":2,"endColumn":36},{"ruleId":"479","severity":1,"message":"532","line":19,"column":12,"nodeType":"481","messageId":"482","endLine":19,"endColumn":18},{"ruleId":"479","severity":1,"message":"533","line":19,"column":20,"nodeType":"481","messageId":"482","endLine":19,"endColumn":29},{"ruleId":"479","severity":1,"message":"528","line":1,"column":17,"nodeType":"481","messageId":"482","endLine":1,"endColumn":28},{"ruleId":"479","severity":1,"message":"529","line":1,"column":30,"nodeType":"481","messageId":"482","endLine":1,"endColumn":38},{"ruleId":"479","severity":1,"message":"530","line":1,"column":40,"nodeType":"481","messageId":"482","endLine":1,"endColumn":49},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-unused-vars","'useSteate' is defined but never used.","'validLink' is assigned a value but never used.","'paidAmount' is assigned a value but never used.","'transactionTotal' is assigned a value but never used.","'billingAddress' is assigned a value but never used.","'setRedirectURL' is assigned a value but never used.","'charge' is assigned a value but never used.","'setCharge' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createRandomKey', 'getFieldsetData', 'getPaymentLinkDetails', and 'updatePaymentLinkRecord'. Either include them or remove the dependency array.","ArrayExpression",["563"],"'amountDue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'urlAmount' is assigned a value but never used.","'valid' is assigned a value but never used.","'orderReponse' is assigned a value but never used.","@typescript-eslint/no-redeclare","'url' is already defined.","redeclared","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'bankData' is assigned a value but never used.","'setBankData' is assigned a value but never used.","'bankTocken' is assigned a value but never used.","'todo' is assigned a value but never used.","'addTodo' is assigned a value but never used.","'apicustomerId' is assigned a value but never used.","'setApicustomerId' is assigned a value but never used.","'user' is assigned a value but never used.","'amount' is assigned a value but never used.","'bankAchID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.apicustomerid'. Either include it or remove the dependency array.",["564"],"'Button' is defined but never used.","'isshowAddress' is assigned a value but never used.","'setIsShowAddress' is assigned a value but never used.",["565"],"'handleAddCard' is assigned a value but never used.","'message' is assigned a value but never used.","'type' is assigned a value but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Placeholder' is defined but never used.","'action' is assigned a value but never used.","'setAction' is assigned a value but never used.","'showCardActions' is defined but never used.","'uuid' is defined but never used.","'updateLocalStorageCards' is defined but never used.","'navigate' is assigned a value but never used.","'newCardsList' is assigned a value but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'fetchCreditCardList' is defined but never used.","'setCardsData' is assigned a value but never used.","'setDefaultCard' is assigned a value but never used.","'defaultCardPayment' is defined but never used.","'handleDeleteAction' is defined but never used.","'getStripeKey' is defined but never used.","'stripeKey' is assigned a value but never used.","'redirectUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createRandomKey', 'getPaymentLinkDetails', and 'updatePaymentLinkRecord'. Either include them or remove the dependency array.",["566"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'redirectUrl' is already defined.",["567"],["568"],"'urlOrderId' is assigned a value but never used.","'setUrlOrderId' is assigned a value but never used.",["569"],["570"],["571"],{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"574","fix":"576"},{"desc":"577","fix":"578"},{"desc":"574","fix":"579"},{"desc":"574","fix":"580"},{"desc":"581","fix":"582"},{"desc":"574","fix":"583"},{"desc":"574","fix":"584"},"Update the dependencies array to be: [apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, transResponse, getPaymentLinkDetails, getFieldsetData, updatePaymentLinkRecord, createRandomKey]",{"range":"585","text":"586"},"Update the dependencies array to be: [props.apicustomerid]",{"range":"587","text":"588"},{"range":"589","text":"588"},"Update the dependencies array to be: [apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, transResponse, getPaymentLinkDetails, updatePaymentLinkRecord, createRandomKey]",{"range":"590","text":"591"},{"range":"592","text":"588"},{"range":"593","text":"588"},"Update the dependencies array to be: [apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, orderidUrl, transResponse, updatePaymentLinkRecord, createRandomKey, getPaymentLinkDetails]",{"range":"594","text":"595"},{"range":"596","text":"588"},{"range":"597","text":"588"},[5256,5405],"[apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, transResponse, getPaymentLinkDetails, getFieldsetData, updatePaymentLinkRecord, createRandomKey]",[2190,2192],"[props.apicustomerid]",[1459,1461],[5219,5368],"[apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, transResponse, getPaymentLinkDetails, updatePaymentLinkRecord, createRandomKey]",[2190,2192],[1459,1461],[5658,5820],"[apicustomerId, dueAmount, orderTotal, selectedPaymentOption, payableAmount, cardType, radioValue, urlContactId, baseUrl, idempotencyKey, orderidUrl, transResponse, updatePaymentLinkRecord, createRandomKey, getPaymentLinkDetails]",[1459,1461],[2190,2192]]