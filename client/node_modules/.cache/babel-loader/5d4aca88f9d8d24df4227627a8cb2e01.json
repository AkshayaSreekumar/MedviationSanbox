{"ast":null,"code":"var _jsxFileName = \"/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CardForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({\n  length: 12\n}, (x, i) => {\n  const month = i + 1;\n  return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({\n  length: 9\n}, (_x, i) => currentYear + i);\nexport default function CardForm(props) {\n  _s();\n\n  const {\n    selectedCreditCard,\n    onUpdateState,\n    setIsCardFlipped,\n    setIsSetDefault,\n    handleSubmitAction,\n    handleCloseModal,\n    children\n  } = props;\n  const [errors, setErrors] = useState({\n    id: '',\n    cardNumber: '',\n    cardHolder: '',\n    cardMonth: '',\n    cardYear: '',\n    cardCvv: '',\n    addrressline1: '',\n    addrressline2: '',\n    country: '',\n    city: '',\n    state: '',\n    postalCode: ''\n  });\n  const [disabled, setDisabled] = React.useState(true);\n\n  const handleFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    onUpdateState(name, value);\n  };\n\n  const handleFormChangeNumbers = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    if (isNaN(Number(value))) return; //only accept numbers\n\n    onUpdateState(name, value);\n  };\n\n  useEffect(() => {\n    if (selectedCreditCard.id) {\n      setDisabled(false);\n    }\n  });\n\n  const onCvvFocus = () => {\n    setIsCardFlipped(true);\n  };\n\n  const onCvvBlur = () => {\n    setIsCardFlipped(false);\n  };\n\n  const handleConfirmAction = e => {\n    // validate errors\n    if (!isFormHasErrors()) {\n      handleSubmitAction();\n    }\n  };\n\n  const isFormHasErrors = () => {\n    const newErrors = {\n      id: '',\n      cardNumber: '',\n      cardHolder: '',\n      cardMonth: '',\n      cardYear: '',\n      cardCvv: '',\n      addrressline1: '',\n      addrressline2: '',\n      country: '',\n      city: '',\n      state: '',\n      postalCode: ''\n    }; //first validate blank fields\n\n    let isErrorFlag = false;\n    Object.keys(newErrors).forEach(function (key) {\n      const keyPair = key;\n      const displayableKeyName = key.toLowerCase().replace('card', 'Card ');\n\n      if (!selectedCreditCard[keyPair]) {\n        newErrors[keyPair] = `${displayableKeyName} value required.`;\n        isErrorFlag = true;\n      } else {\n        newErrors[keyPair] = '';\n        isErrorFlag = false;\n      }\n    });\n\n    if (isErrorFlag) {\n      setErrors(newErrors);\n      return isErrorFlag;\n    } //if no blank field then check other validation\n\n\n    if (selectedCreditCard['cardNumber'].length !== 16) {\n      newErrors.cardNumber = 'Card number should be 16 digits';\n      isErrorFlag = true;\n    }\n\n    if (selectedCreditCard['cardCvv'].length !== 3) {\n      newErrors.cardCvv = 'Card number should be 4 digits';\n      isErrorFlag = true;\n    }\n\n    setErrors(newErrors);\n    return isErrorFlag;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-list\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-form__inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"cardNumber\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              onChange: handleFormChangeNumbers,\n              maxLength: 16,\n              disabled: !disabled,\n              placeholder: \"Card Number\",\n              value: selectedCreditCard.cardNumber,\n              isInvalid: !!errors.cardNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              className: \"card-input__input -select form-control\",\n              value: selectedCreditCard.cardMonth,\n              name: \"cardMonth\",\n              placeholder: \"Expiration Date\",\n              onChange: handleFormChange,\n              isInvalid: !!errors.cardMonth,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"MM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), monthsArr.map((val, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val,\n                children: val\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"cardYear\",\n              placeholder: \"Expiration Year\",\n              className: \"card-input__input -select form-control\",\n              value: selectedCreditCard.cardYear,\n              onChange: handleFormChange,\n              isInvalid: !!errors.cardYear,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"YY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), yearsArr.map((val, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val,\n                children: val\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-8\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"cardHolder\",\n              placeholder: \"Card Holder Name\",\n              onChange: handleFormChange,\n              value: selectedCreditCard.cardHolder,\n              isInvalid: !!errors.cardHolder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              className: \"form-control mb-3\",\n              maxLength: 4,\n              autoComplete: \"off\",\n              name: \"cardCvv\",\n              placeholder: \"CVV\",\n              value: selectedCreditCard.cardCvv,\n              onChange: handleFormChangeNumbers,\n              onFocus: onCvvFocus,\n              onBlur: onCvvBlur,\n              disabled: !disabled,\n              isInvalid: !!errors.cardCvv\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              \"aria-label\": \"option 1\",\n              className: \"mb-3\",\n              defaultChecked: props.setDefault,\n              label: \"Set Default\",\n              onChange: e => {\n                console.log(e.target.checked);\n                setIsSetDefault(e.target.checked);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 p-2 bg-opacity-10 h7 bg-primary border-start border-primary\",\n          children: \"Billing Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"addrressline1\",\n              placeholder: \"Addres Line 1\",\n              value: selectedCreditCard.addrressline1,\n              onChange: handleFormChange,\n              isInvalid: !!errors.addrressline1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: selectedCreditCard.addrressline2 ? /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"addrressline2\",\n              placeholder: \"Addres Line 1\",\n              value: selectedCreditCard.addrressline2,\n              onChange: handleFormChange,\n              isInvalid: !!errors.addrressline2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 51\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"country\",\n              placeholder: \"Country\",\n              value: selectedCreditCard.country,\n              onChange: handleFormChange,\n              isInvalid: !!errors.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"city\",\n              placeholder: \"City\",\n              value: selectedCreditCard.city,\n              onChange: handleFormChange,\n              isInvalid: !!errors.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"state\",\n              placeholder: \"State\",\n              value: selectedCreditCard.state,\n              onChange: handleFormChange,\n              isInvalid: !!errors.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control mb-3\",\n              autoComplete: \"off\",\n              name: \"postalCode\",\n              placeholder: \"Postal code\",\n              value: selectedCreditCard.postalCode,\n              onChange: handleFormChange,\n              isInvalid: !!errors.postalCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-form__row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-form__col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-end gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"btn-sm me-3\",\n              onClick: handleCloseModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"sm\",\n              onClick: handleConfirmAction,\n              children: \"Continue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardForm, \"k7bt0S/4BVgNDrdYiZTnk1d9CRw=\");\n\n_c = CardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","currentYear","Date","getFullYear","monthsArr","Array","from","length","x","i","month","yearsArr","_x","CardForm","props","selectedCreditCard","onUpdateState","setIsCardFlipped","setIsSetDefault","handleSubmitAction","handleCloseModal","children","errors","setErrors","id","cardNumber","cardHolder","cardMonth","cardYear","cardCvv","addrressline1","addrressline2","country","city","state","postalCode","disabled","setDisabled","handleFormChange","event","name","value","target","handleFormChangeNumbers","isNaN","Number","onCvvFocus","onCvvBlur","handleConfirmAction","e","isFormHasErrors","newErrors","isErrorFlag","Object","keys","forEach","key","keyPair","displayableKeyName","toLowerCase","replace","map","val","index","setDefault","console","log","checked"],"sources":["/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CardForm/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { CreditCard } from '../../CardManager/CreditCard';\n\nconst currentYear = new Date().getFullYear();\nconst monthsArr = Array.from({ length: 12 }, (x, i) => {\n  const month = i + 1;\n  return month <= 9 ? '0' + month : month;\n});\nconst yearsArr = Array.from({ length: 9 }, (_x, i) => currentYear + i);\ninterface CardFormProps {\n  selectedCreditCard: CreditCard;\n  onUpdateState: any;\n  setDefault:boolean;\n  setIsSetDefault: React.Dispatch<React.SetStateAction<boolean>>;\n  setIsCardFlipped: React.Dispatch<React.SetStateAction<boolean>>;\n  handleSubmitAction: () => void;\n  handleCloseModal: () => void;\n  children: any;\n}\nexport default function CardForm(props: CardFormProps) {\n  const {\n    selectedCreditCard,\n    onUpdateState,\n    setIsCardFlipped,\n    setIsSetDefault,\n    handleSubmitAction,\n    handleCloseModal,\n    children,\n  } = props;\n  const [errors, setErrors] = useState<CreditCard>({\n    id: '',\n    cardNumber: '',\n    cardHolder: '',\n    cardMonth: '',\n    cardYear: '',\n    cardCvv: '',\n    addrressline1: '',\n    addrressline2: '',\n    country: '',\n    city: '',\n    state: '',\n    postalCode: ''\n  });\n\n  const [disabled, setDisabled] = React.useState(true);\n  const handleFormChange = (event: {\n    target: { name: string; value: string };\n  }) => {\n    const { name, value } = event.target;\n\n    onUpdateState(name, value);\n  };\n\n  const handleFormChangeNumbers = (event: {\n    target: { value: string; name: string };\n  }) => {\n    const { name, value } = event.target;\n    if (isNaN(Number(value))) return; //only accept numbers\n    onUpdateState(name, value);\n  };\n  useEffect(() => {\n    if (selectedCreditCard.id) {\n      setDisabled(false)\n    }\n  });\n  const onCvvFocus = () => {\n    setIsCardFlipped(true);\n  };\n  const onCvvBlur = () => {\n    setIsCardFlipped(false);\n  };\n\n  const handleConfirmAction = (e: any) => {\n    // validate errors\n    if (!isFormHasErrors()) {\n      handleSubmitAction();\n    }\n  };\n  const isFormHasErrors = () => {\n    const newErrors: CreditCard = {\n      id: '',\n      cardNumber: '',\n      cardHolder: '',\n      cardMonth: '',\n      cardYear: '',\n      cardCvv: '',\n      addrressline1: '',\n      addrressline2: '',\n      country: '',\n      city: '',\n      state: '',\n      postalCode: ''\n    };\n    //first validate blank fields\n    let isErrorFlag = false;\n    Object.keys(newErrors).forEach(function (key: any) {\n      const keyPair = key as keyof CreditCard;\n      const displayableKeyName = key.toLowerCase().replace('card', 'Card ');\n      if (!selectedCreditCard[keyPair]) {\n        newErrors[keyPair] = `${displayableKeyName} value required.`;\n        isErrorFlag = true;\n      } else {\n        newErrors[keyPair] = '';\n        isErrorFlag = false;\n      }\n    });\n    if (isErrorFlag) {\n      setErrors(newErrors);\n      return isErrorFlag;\n    }\n    //if no blank field then check other validation\n    if (selectedCreditCard['cardNumber'].length !== 16) {\n      newErrors.cardNumber = 'Card number should be 16 digits';\n      isErrorFlag = true;\n    }\n    if (selectedCreditCard['cardCvv'].length !== 3) {\n      newErrors.cardCvv = 'Card number should be 4 digits';\n      isErrorFlag = true;\n    }\n    setErrors(newErrors);\n    return isErrorFlag;\n  };\n\n  return (\n    <div className=\"card-form\">\n      <div className=\"card-list\">{children}</div>\n      <div className=\"card-form__inner\">\n        <div className=\"card-input\">\n          <div className=\"row mt-4\">\n            <div className=\"col-8\">\n              <Form.Control\n                type=\"text\"\n                name=\"cardNumber\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                onChange={handleFormChangeNumbers}\n                maxLength={16}\n                disabled={!disabled}\n                placeholder=\"Card Number\"\n                value={selectedCreditCard.cardNumber}\n                isInvalid={!!errors.cardNumber}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.cardNumber}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-2\">\n              <Form.Control\n                as=\"select\"\n                className=\"card-input__input -select form-control\"\n                value={selectedCreditCard.cardMonth}\n                name=\"cardMonth\"\n                placeholder='Expiration Date'\n                onChange={handleFormChange}\n                isInvalid={!!errors.cardMonth}\n              >\n                <option value=\"\" disabled>\n                  MM\n                </option>\n\n                {monthsArr.map((val, index) => (\n                  <option key={index} value={val}>\n                    {val}\n                  </option>\n                ))}\n              </Form.Control>\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.cardMonth}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-2\">\n              <Form.Control\n                as=\"select\"\n                name=\"cardYear\"\n                placeholder='Expiration Year'\n                className=\"card-input__input -select form-control\"\n                value={selectedCreditCard.cardYear}\n                onChange={handleFormChange}\n                isInvalid={!!errors.cardYear}\n              >\n                <option value=\"\" disabled>\n                  YY\n                </option>\n\n                {yearsArr.map((val, index) => (\n                  <option key={index} value={val}>\n                    {val}\n                  </option>\n                ))}\n              </Form.Control>\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.cardYear}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-8\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"cardHolder\"\n                placeholder='Card Holder Name'\n                onChange={handleFormChange}\n                value={selectedCreditCard.cardHolder}\n                isInvalid={!!errors.cardHolder}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.cardHolder}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-4\">\n              <Form.Control\n                type=\"password\"\n                className=\"form-control mb-3\"\n                maxLength={4}\n                autoComplete=\"off\"\n                name=\"cardCvv\"\n                placeholder='CVV'\n                value={selectedCreditCard.cardCvv}\n                onChange={handleFormChangeNumbers}\n                onFocus={onCvvFocus}\n                onBlur={onCvvBlur}\n                disabled={!disabled}\n                isInvalid={!!errors.cardCvv}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.cardCvv}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-12\">\n              {/* <Form.Check className='mb-3'\n                type='checkbox'\n                id='set-default'\n                label='Set default '\n                checked={props.setDefault}\n                onChange={handleSetDefault}\n              /> */}\n              <Form.Check aria-label=\"option 1\" className=\"mb-3\"  defaultChecked={props.setDefault} label='Set Default' onChange={(e) => { console.log(e.target.checked);setIsSetDefault(e.target.checked) }} />\n            </div>\n          </div>\n          <div className='mb-3 p-2 bg-opacity-10 h7 bg-primary border-start border-primary'>Billing Address</div>\n          <div className='row'>\n            <div className=\"col-12\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"addrressline1\"\n                placeholder='Addres Line 1'\n                value={selectedCreditCard.addrressline1}\n                onChange={handleFormChange}\n                isInvalid={!!errors.addrressline1}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.addrressline1}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-12\">\n              {selectedCreditCard.addrressline2 ? <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"addrressline2\"\n                placeholder='Addres Line 1'\n                value={selectedCreditCard.addrressline2}\n                onChange={handleFormChange}\n                isInvalid={!!errors.addrressline2}\n              /> : null}\n            </div>\n            <div className=\"col-3\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"country\"\n                placeholder='Country'\n                value={selectedCreditCard.country}\n                onChange={handleFormChange}\n                isInvalid={!!errors.country}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.country}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-3\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"city\"\n                placeholder='City'\n                value={selectedCreditCard.city}\n                onChange={handleFormChange}\n                isInvalid={!!errors.city}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.city}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-3\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"state\"\n                placeholder='State'\n                value={selectedCreditCard.state}\n                onChange={handleFormChange}\n                isInvalid={!!errors.state}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.state}\n              </Form.Control.Feedback> */}\n            </div>\n            <div className=\"col-3\">\n              <Form.Control\n                type=\"text\"\n                className=\"form-control mb-3\"\n                autoComplete=\"off\"\n                name=\"postalCode\"\n                placeholder='Postal code'\n                value={selectedCreditCard.postalCode}\n                onChange={handleFormChange}\n                isInvalid={!!errors.postalCode}\n              />\n              {/* <Form.Control.Feedback type=\"invalid\">\n                {errors.postalCode}\n              </Form.Control.Feedback> */}\n            </div>\n          </div>\n        </div>\n        <div className=\"card-form__row\">\n          <div className=\"card-form__col\">\n            <div className=\"text-end gap-2\">\n              <Button variant=\"secondary\" className='btn-sm me-3' onClick={handleCloseModal}>\n                Cancel\n              </Button>\n              <Button variant=\"primary\" size=\"sm\" onClick={handleConfirmAction}>\n                Continue\n              </Button>{' '}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}