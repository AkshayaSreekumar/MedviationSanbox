{"ast":null,"code":"//Data Layer\nexport class CreditCardAPI {\n  async fetchCreditCardList() {\n    const apiData = [// {\n      //   id: 'ff646567-484e-4eb7-961f-977f7c728eb9',\n      //   cardNumber: '1111111111111111',\n      //   cardHolder: 'Hassan Saeed',\n      //   cardMonth: '01',\n      //   cardYear: '2023',\n      //   cardCvv: '1111',\n      //   addrressline1:''\n      // },\n      // {\n      //   id: 'b8262cc8-6506-46f2-925a-819729b224ec',\n      //   cardNumber: '2222222222222222',\n      //   cardHolder: 'John Doe',\n      //   cardMonth: '02',\n      //   cardYear: '2024',\n      //   cardCvv: '2222',\n      //   addrressline1:''\n      // },\n    ];\n    let creditCardsList = []; //first check local storage if local storage is empty then add api mock data as seed\n\n    if (localStorage.getItem('cards')) {\n      var _localStorage$getItem;\n\n      const localStorageData = JSON.parse((_localStorage$getItem = localStorage.getItem('cards')) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : '');\n      creditCardsList = [...localStorageData];\n    } else {\n      creditCardsList = [...apiData];\n      updateLocalStorageCards(creditCardsList);\n    }\n\n    return creditCardsList; //TODO:integrate API module when got API from backend team :)\n\n    /*\n    private readonly api = new Api();//it will have all Restful verbs functions\n    return axios.get(`ENDPOINT_GOES_HERE`)\n    .then((res: { data: any; }) => {\n      return res.data;\n    });\n    */\n  }\n\n} //CreditCardAPI Class End\n//Business Layer\n\nexport async function fetchCreditCardList() {\n  const api = new CreditCardAPI();\n  return api.fetchCreditCardList();\n}\nexport function updateLocalStorageCards(cards) {\n  localStorage.setItem('cards', JSON.stringify(cards));\n}","map":{"version":3,"names":["CreditCardAPI","fetchCreditCardList","apiData","creditCardsList","localStorage","getItem","localStorageData","JSON","parse","updateLocalStorageCards","api","cards","setItem","stringify"],"sources":["/Users/akshayasreekumar/Documents/Akshaya/InterACTPayReactTs/interactPAY-TS/client/src/components/CardManager/CreditCard.ts"],"sourcesContent":["export interface CreditCard {\n  id: string;\n  cardNumber: string;\n  cardHolder: string;\n  cardMonth: string;\n  cardYear: string;\n  cardCvv: string;\n  addrressline1:string;\n  addrressline2:string;\n  country:string;\n  city:string;\n  state:string;\n  postalCode:string;\n}\nexport interface AddEditCard extends CreditCard {\n  isCardFlipped: boolean;\n}\n\n//Data Layer\nexport class CreditCardAPI {\n  async fetchCreditCardList(): Promise<CreditCard[]> {\n    const apiData: CreditCard[] = [\n      // {\n      //   id: 'ff646567-484e-4eb7-961f-977f7c728eb9',\n      //   cardNumber: '1111111111111111',\n      //   cardHolder: 'Hassan Saeed',\n      //   cardMonth: '01',\n      //   cardYear: '2023',\n      //   cardCvv: '1111',\n      //   addrressline1:''\n      // },\n      // {\n      //   id: 'b8262cc8-6506-46f2-925a-819729b224ec',\n      //   cardNumber: '2222222222222222',\n      //   cardHolder: 'John Doe',\n      //   cardMonth: '02',\n      //   cardYear: '2024',\n      //   cardCvv: '2222',\n      //   addrressline1:''\n      // },\n    ];\n    let creditCardsList: CreditCard[] = [];\n    //first check local storage if local storage is empty then add api mock data as seed\n    if (localStorage.getItem('cards')) {\n      const localStorageData: CreditCard[] = JSON.parse(\n        localStorage.getItem('cards') ?? '',\n      );\n      creditCardsList = [...localStorageData];\n    } else {\n      creditCardsList = [...apiData];\n      updateLocalStorageCards(creditCardsList);\n    }\n\n    return creditCardsList;\n    //TODO:integrate API module when got API from backend team :)\n    /*\n    private readonly api = new Api();//it will have all Restful verbs functions\n    return axios.get(`ENDPOINT_GOES_HERE`)\n    .then((res: { data: any; }) => {\n      return res.data;\n    });\n    */\n  }\n} //CreditCardAPI Class End\n\n//Business Layer\nexport async function fetchCreditCardList(): Promise<CreditCard[]> {\n  const api = new CreditCardAPI();\n  return api.fetchCreditCardList();\n}\nexport function updateLocalStorageCards(cards: CreditCard[]) {\n  localStorage.setItem('cards', JSON.stringify(cards));\n}\n"],"mappings":"AAkBA;AACA,OAAO,MAAMA,aAAN,CAAoB;EACA,MAAnBC,mBAAmB,GAA0B;IACjD,MAAMC,OAAqB,GAAG,CAC5B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAlB4B,CAA9B;IAoBA,IAAIC,eAA6B,GAAG,EAApC,CArBiD,CAsBjD;;IACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;MAAA;;MACjC,MAAMC,gBAA8B,GAAGC,IAAI,CAACC,KAAL,0BACrCJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CADqC,yEACJ,EADI,CAAvC;MAGAF,eAAe,GAAG,CAAC,GAAGG,gBAAJ,CAAlB;IACD,CALD,MAKO;MACLH,eAAe,GAAG,CAAC,GAAGD,OAAJ,CAAlB;MACAO,uBAAuB,CAACN,eAAD,CAAvB;IACD;;IAED,OAAOA,eAAP,CAjCiD,CAkCjD;;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACG;;AA3CwB,C,CA4CzB;AAEF;;AACA,OAAO,eAAeF,mBAAf,GAA4D;EACjE,MAAMS,GAAG,GAAG,IAAIV,aAAJ,EAAZ;EACA,OAAOU,GAAG,CAACT,mBAAJ,EAAP;AACD;AACD,OAAO,SAASQ,uBAAT,CAAiCE,KAAjC,EAAsD;EAC3DP,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,IAAI,CAACM,SAAL,CAAeF,KAAf,CAA9B;AACD"},"metadata":{},"sourceType":"module"}